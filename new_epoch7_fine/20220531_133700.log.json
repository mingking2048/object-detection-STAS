{"env_info": "sys.platform: linux\nPython: 3.8.12 (default, Jan 15 2022, 18:39:47) [GCC 7.5.0]\nCUDA available: True\nGPU 0: GeForce RTX 2080 Ti\nCUDA_HOME: /usr/local/cuda\nNVCC: Cuda compilation tools, release 10.2, V10.2.89\nGCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0\nPyTorch: 1.10.2+cu102\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - LAPACK is enabled (usually provided by MKL)\n  - NNPACK is enabled\n  - CPU capability usage: AVX512\n  - CUDA Runtime 10.2\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70\n  - CuDNN 7.6.5\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=10.2, CUDNN_VERSION=7.6.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.2, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.11.3+cu102\nOpenCV: 4.5.5\nMMCV: 1.4.0\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 10.2\nMMDetection: 2.14.0+a546be5", "config": "model = dict(\n    type='HybridTaskCascade',\n    pretrained=None,\n    backbone=dict(\n        type='CBSwinTransformer',\n        embed_dim=128,\n        depths=[2, 2, 18, 2],\n        num_heads=[4, 8, 16, 32],\n        window_size=7,\n        mlp_ratio=4.0,\n        qkv_bias=True,\n        qk_scale=None,\n        drop_rate=0.0,\n        attn_drop_rate=0.0,\n        drop_path_rate=0.3,\n        ape=False,\n        patch_norm=True,\n        out_indices=(0, 1, 2, 3),\n        use_checkpoint=False),\n    neck=dict(\n        type='CBFPN',\n        in_channels=[128, 256, 512, 1024],\n        out_channels=256,\n        num_outs=5),\n    rpn_head=dict(\n        type='RPNHead',\n        in_channels=256,\n        feat_channels=256,\n        anchor_generator=dict(\n            type='AnchorGenerator',\n            scales=[4],\n            ratios=[0.78, 0.92, 1.0, 1.2, 1.41],\n            strides=[4, 8, 16, 32, 64]),\n        bbox_coder=dict(\n            type='DeltaXYWHBBoxCoder',\n            target_means=[0.0, 0.0, 0.0, 0.0],\n            target_stds=[1.0, 1.0, 1.0, 1.0]),\n        loss_bbox=dict(\n            type='SmoothL1Loss', beta=0.1111111111111111, loss_weight=1.0)),\n    roi_head=dict(\n        type='HybridTaskCascadeRoIHead',\n        interleaved=True,\n        mask_info_flow=True,\n        num_stages=3,\n        stage_loss_weights=[1, 0.5, 0.25],\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=[\n            dict(\n                type='ConvFCBBoxHead',\n                num_shared_convs=4,\n                num_shared_fcs=1,\n                in_channels=256,\n                conv_out_channels=256,\n                fc_out_channels=1024,\n                roi_feat_size=7,\n                num_classes=1,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0.0, 0.0, 0.0, 0.0],\n                    target_stds=[0.1, 0.1, 0.2, 0.2]),\n                reg_class_agnostic=True,\n                reg_decoded_bbox=True,\n                norm_cfg=dict(type='SyncBN', requires_grad=True),\n                loss_bbox=dict(type='GIoULoss', loss_weight=10.0)),\n            dict(\n                type='ConvFCBBoxHead',\n                num_shared_convs=4,\n                num_shared_fcs=1,\n                in_channels=256,\n                conv_out_channels=256,\n                fc_out_channels=1024,\n                roi_feat_size=7,\n                num_classes=1,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0.0, 0.0, 0.0, 0.0],\n                    target_stds=[0.05, 0.05, 0.1, 0.1]),\n                reg_class_agnostic=True,\n                reg_decoded_bbox=True,\n                norm_cfg=dict(type='SyncBN', requires_grad=True),\n                loss_bbox=dict(type='GIoULoss', loss_weight=10.0)),\n            dict(\n                type='ConvFCBBoxHead',\n                num_shared_convs=4,\n                num_shared_fcs=1,\n                in_channels=256,\n                conv_out_channels=256,\n                fc_out_channels=1024,\n                roi_feat_size=7,\n                num_classes=1,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0.0, 0.0, 0.0, 0.0],\n                    target_stds=[0.033, 0.033, 0.067, 0.067]),\n                reg_class_agnostic=True,\n                reg_decoded_bbox=True,\n                norm_cfg=dict(type='SyncBN', requires_grad=True),\n                loss_bbox=dict(type='GIoULoss', loss_weight=10.0))\n        ]),\n    train_cfg=dict(\n        rpn=dict(\n            assigner=dict(\n                type='MaxIoUAssigner',\n                pos_iou_thr=0.7,\n                neg_iou_thr=0.3,\n                min_pos_iou=0.3,\n                ignore_iof_thr=-1),\n            sampler=dict(\n                type='RandomSampler',\n                num=256,\n                pos_fraction=0.5,\n                neg_pos_ub=-1,\n                add_gt_as_proposals=False),\n            allowed_border=0,\n            pos_weight=-1,\n            debug=False),\n        rpn_proposal=dict(\n            nms_pre=2000,\n            max_per_img=2000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=[\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.5,\n                    neg_iou_thr=0.5,\n                    min_pos_iou=0.5,\n                    ignore_iof_thr=-1),\n                sampler=dict(\n                    type='OHEMSampler',\n                    num=512,\n                    pos_fraction=0.25,\n                    neg_pos_ub=-1,\n                    add_gt_as_proposals=True),\n                mask_size=28,\n                pos_weight=-1,\n                debug=False),\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.6,\n                    neg_iou_thr=0.6,\n                    min_pos_iou=0.6,\n                    ignore_iof_thr=-1),\n                sampler=dict(\n                    type='OHEMSampler',\n                    num=512,\n                    pos_fraction=0.25,\n                    neg_pos_ub=-1,\n                    add_gt_as_proposals=True),\n                mask_size=28,\n                pos_weight=-1,\n                debug=False),\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.7,\n                    neg_iou_thr=0.7,\n                    min_pos_iou=0.7,\n                    ignore_iof_thr=-1),\n                sampler=dict(\n                    type='OHEMSampler',\n                    num=512,\n                    pos_fraction=0.25,\n                    neg_pos_ub=-1,\n                    add_gt_as_proposals=True),\n                mask_size=28,\n                pos_weight=-1,\n                debug=False)\n        ]),\n    test_cfg=dict(\n        rpn=dict(\n            nms_pre=1000,\n            max_per_img=1000,\n            nms=dict(type='soft_nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=dict(\n            score_thr=0.05,\n            nms=dict(type='soft_nms', iou_threshold=0.5),\n            max_per_img=200,\n            mask_thr_binary=0.5,\n            iou_threshold=0.5)))\noptimizer = dict(\n    type='AdamW',\n    lr=1e-05,\n    betas=(0.9, 0.999),\n    weight_decay=0.05,\n    paramwise_cfg=dict(\n        custom_keys=dict(\n            absolute_pos_embed=dict(decay_mult=0.0),\n            relative_position_bias_table=dict(decay_mult=0.0),\n            norm=dict(decay_mult=0.0))))\noptimizer_config = dict(\n    grad_clip=None,\n    type='DistOptimizerHook',\n    update_interval=1,\n    coalesce=True,\n    bucket_size_mb=-1,\n    use_fp16=True)\ncheckpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = './work_dirs/new_epoch7/latest.pth'\nresume_from = None\nworkflow = [('train', 1), ('val', 1)]\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\nfp16 = None\ndataset_type = 'CustomDataset'\ndata_root = 'data/OBJ_Train_Datasets/'\nmutli_scale_image_size = [(686, 376), (950, 520)]\ntest_mutli_scale_image_size = [(858, 471), (943, 518), (1000, 565),\n                               (1115, 612), (1200, 660)]\nalbu_train_transforms = [\n    dict(\n        type='RandomBrightnessContrast',\n        brightness_limit=[0.1, 0.3],\n        contrast_limit=[0.1, 0.3],\n        p=0.1),\n    dict(\n        type='OneOf',\n        transforms=[\n            dict(\n                type='RGBShift',\n                r_shift_limit=10,\n                g_shift_limit=10,\n                b_shift_limit=10,\n                p=1.0),\n            dict(\n                type='HueSaturationValue',\n                hue_shift_limit=20,\n                sat_shift_limit=30,\n                val_shift_limit=20,\n                p=1.0),\n            dict(type='FancyPCA', alpha=0.1, always_apply=False, p=1.0)\n        ],\n        p=0.1)\n]\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='Resize',\n        img_scale=[(686, 376), (950, 520)],\n        multiscale_mode='range',\n        keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=[(858, 471), (943, 518), (1000, 565), (1115, 612),\n                   (1200, 660)],\n        flip=True,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\nsamples_per_gpu = 1\nworkers_per_gpu = 1\nrunner = dict(type='EpochBasedRunnerAmp', max_epochs=2)\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[3, 5])\nclasses = ('stas', )\ndata = dict(\n    samples_per_gpu=1,\n    workers_per_gpu=1,\n    train=dict(\n        type='CustomDataset',\n        classes=('stas', ),\n        ann_file='data/OBJ_Train_Datasets/custom/STAS_train.pkl',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='Resize',\n                img_scale=[(686, 376), (950, 520)],\n                multiscale_mode='range',\n                keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n        ]),\n    val=dict(\n        type='CustomDataset',\n        classes=('stas', ),\n        ann_file='data/OBJ_Train_Datasets/custom/STAS_train.pkl',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=[(858, 471), (943, 518), (1000, 565), (1115, 612),\n                           (1200, 660)],\n                flip=True,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='CustomDataset',\n        classes=('stas', ),\n        ann_file='data/OBJ_Train_Datasets/custom/STAS_test.pkl',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=[(858, 471), (943, 518), (1000, 565), (1115, 612),\n                           (1200, 660)],\n                flip=True,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nevaluation = dict(metric=['mAP'])\nwork_dir = 'work_dirs/new_epoch7_fine'\ngpu_ids = range(0, 1)\n", "seed": 1206, "exp_name": "swin_custom_fine.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.0, "memory": 8976, "data_time": 0.04797, "loss_rpn_cls0_w0.5": 0.00133, "loss_rpn_bbox0_w0.5": 0.00143, "loss_rpn_cls1": 0.00183, "loss_rpn_bbox1": 0.00192, "s0.loss_cls0_w0.5": 0.04979, "s0.acc0": 48.10547, "s0.loss_bbox0_w0.5": 0.06742, "s1.loss_cls0_w0.5": 0.01607, "s1.acc0": 48.72266, "s1.loss_bbox0_w0.5": 0.01593, "s2.loss_cls0_w0.5": 0.00353, "s2.acc0": 49.45703, "s2.loss_bbox0_w0.5": 0.00283, "s0.loss_cls1": 0.08411, "s0.acc1": 96.8125, "s0.loss_bbox1": 0.12271, "s1.loss_cls1": 0.02844, "s1.acc1": 97.69922, "s1.loss_bbox1": 0.02957, "s2.loss_cls1": 0.00623, "s2.acc1": 99.08984, "s2.loss_bbox1": 0.00533, "loss": 0.43847, "time": 0.73653}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.0, "memory": 8976, "data_time": 0.00391, "loss_rpn_cls0_w0.5": 0.00163, "loss_rpn_bbox0_w0.5": 0.00132, "loss_rpn_cls1": 0.00221, "loss_rpn_bbox1": 0.00184, "s0.loss_cls0_w0.5": 0.04986, "s0.acc0": 47.96875, "s0.loss_bbox0_w0.5": 0.0695, "s1.loss_cls0_w0.5": 0.01591, "s1.acc0": 48.74414, "s1.loss_bbox0_w0.5": 0.01697, "s2.loss_cls0_w0.5": 0.00384, "s2.acc0": 49.39453, "s2.loss_bbox0_w0.5": 0.00295, "s0.loss_cls1": 0.09003, "s0.acc1": 96.53516, "s0.loss_bbox1": 0.12703, "s1.loss_cls1": 0.02866, "s1.acc1": 97.82812, "s1.loss_bbox1": 0.03188, "s2.loss_cls1": 0.00711, "s2.acc1": 98.92578, "s2.loss_bbox1": 0.00559, "loss": 0.45635, "time": 0.69153}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.0, "memory": 8976, "data_time": 0.00368, "loss_rpn_cls0_w0.5": 0.00127, "loss_rpn_bbox0_w0.5": 0.00102, "loss_rpn_cls1": 0.0015, "loss_rpn_bbox1": 0.00151, "s0.loss_cls0_w0.5": 0.03724, "s0.acc0": 48.55273, "s0.loss_bbox0_w0.5": 0.05179, "s1.loss_cls0_w0.5": 0.01188, "s1.acc0": 49.04102, "s1.loss_bbox0_w0.5": 0.01317, "s2.loss_cls0_w0.5": 0.00258, "s2.acc0": 49.60156, "s2.loss_bbox0_w0.5": 0.00234, "s0.loss_cls1": 0.06361, "s0.acc1": 97.42188, "s0.loss_bbox1": 0.09399, "s1.loss_cls1": 0.02074, "s1.acc1": 98.29297, "s1.loss_bbox1": 0.02418, "s2.loss_cls1": 0.00466, "s2.acc1": 99.21875, "s2.loss_bbox1": 0.00448, "loss": 0.33597, "time": 0.70443}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 0.0, "memory": 8976, "data_time": 0.00403, "loss_rpn_cls0_w0.5": 0.00116, "loss_rpn_bbox0_w0.5": 0.00123, "loss_rpn_cls1": 0.00244, "loss_rpn_bbox1": 0.00187, "s0.loss_cls0_w0.5": 0.05247, "s0.acc0": 47.89062, "s0.loss_bbox0_w0.5": 0.06455, "s1.loss_cls0_w0.5": 0.01632, "s1.acc0": 48.67578, "s1.loss_bbox0_w0.5": 0.01699, "s2.loss_cls0_w0.5": 0.00416, "s2.acc0": 49.38867, "s2.loss_bbox0_w0.5": 0.00313, "s0.loss_cls1": 0.09245, "s0.acc1": 96.375, "s0.loss_bbox1": 0.12086, "s1.loss_cls1": 0.02973, "s1.acc1": 97.59375, "s1.loss_bbox1": 0.03209, "s2.loss_cls1": 0.00764, "s2.acc1": 98.82812, "s2.loss_bbox1": 0.00603, "loss": 0.45311, "time": 0.70307}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 0.0, "memory": 8976, "data_time": 0.00366, "loss_rpn_cls0_w0.5": 0.00159, "loss_rpn_bbox0_w0.5": 0.00137, "loss_rpn_cls1": 0.00318, "loss_rpn_bbox1": 0.00194, "s0.loss_cls0_w0.5": 0.04551, "s0.acc0": 48.13672, "s0.loss_bbox0_w0.5": 0.05951, "s1.loss_cls0_w0.5": 0.01484, "s1.acc0": 48.80078, "s1.loss_bbox0_w0.5": 0.01528, "s2.loss_cls0_w0.5": 0.00322, "s2.acc0": 49.51562, "s2.loss_bbox0_w0.5": 0.00291, "s0.loss_cls1": 0.07693, "s0.acc1": 96.89453, "s0.loss_bbox1": 0.10496, "s1.loss_cls1": 0.02542, "s1.acc1": 97.91797, "s1.loss_bbox1": 0.0279, "s2.loss_cls1": 0.00563, "s2.acc1": 99.12109, "s2.loss_bbox1": 0.00554, "loss": 0.39573, "time": 0.70771}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 1e-05, "memory": 8992, "data_time": 0.00387, "loss_rpn_cls0_w0.5": 0.00157, "loss_rpn_bbox0_w0.5": 0.00166, "loss_rpn_cls1": 0.00198, "loss_rpn_bbox1": 0.00243, "s0.loss_cls0_w0.5": 0.05049, "s0.acc0": 47.96875, "s0.loss_bbox0_w0.5": 0.07229, "s1.loss_cls0_w0.5": 0.01697, "s1.acc0": 48.65039, "s1.loss_bbox0_w0.5": 0.01932, "s2.loss_cls0_w0.5": 0.0041, "s2.acc0": 49.35938, "s2.loss_bbox0_w0.5": 0.00342, "s0.loss_cls1": 0.08689, "s0.acc1": 96.5, "s0.loss_bbox1": 0.13169, "s1.loss_cls1": 0.03035, "s1.acc1": 97.53125, "s1.loss_bbox1": 0.03524, "s2.loss_cls1": 0.00751, "s2.acc1": 98.8125, "s2.loss_bbox1": 0.00635, "loss": 0.47223, "time": 0.72457}
{"mode": "train", "epoch": 1, "iter": 350, "lr": 1e-05, "memory": 8992, "data_time": 0.0039, "loss_rpn_cls0_w0.5": 0.0015, "loss_rpn_bbox0_w0.5": 0.00166, "loss_rpn_cls1": 0.00272, "loss_rpn_bbox1": 0.00255, "s0.loss_cls0_w0.5": 0.05821, "s0.acc0": 47.5957, "s0.loss_bbox0_w0.5": 0.07073, "s1.loss_cls0_w0.5": 0.01775, "s1.acc0": 48.58594, "s1.loss_bbox0_w0.5": 0.01711, "s2.loss_cls0_w0.5": 0.00399, "s2.acc0": 49.41211, "s2.loss_bbox0_w0.5": 0.00314, "s0.loss_cls1": 0.1006, "s0.acc1": 95.89844, "s0.loss_bbox1": 0.1308, "s1.loss_cls1": 0.03106, "s1.acc1": 97.56641, "s1.loss_bbox1": 0.03199, "s2.loss_cls1": 0.00709, "s2.acc1": 98.91016, "s2.loss_bbox1": 0.00596, "loss": 0.48688, "time": 0.73183}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 1e-05, "memory": 8992, "data_time": 0.00392, "loss_rpn_cls0_w0.5": 0.00161, "loss_rpn_bbox0_w0.5": 0.00113, "loss_rpn_cls1": 0.00325, "loss_rpn_bbox1": 0.00191, "s0.loss_cls0_w0.5": 0.03828, "s0.acc0": 48.39258, "s0.loss_bbox0_w0.5": 0.05388, "s1.loss_cls0_w0.5": 0.01106, "s1.acc0": 49.11719, "s1.loss_bbox0_w0.5": 0.01363, "s2.loss_cls0_w0.5": 0.00312, "s2.acc0": 49.50781, "s2.loss_bbox0_w0.5": 0.00268, "s0.loss_cls1": 0.06795, "s0.acc1": 97.30469, "s0.loss_bbox1": 0.09952, "s1.loss_cls1": 0.02024, "s1.acc1": 98.37891, "s1.loss_bbox1": 0.02543, "s2.loss_cls1": 0.00568, "s2.acc1": 99.07422, "s2.loss_bbox1": 0.00509, "loss": 0.35448, "time": 0.70751}
{"mode": "train", "epoch": 1, "iter": 450, "lr": 1e-05, "memory": 8992, "data_time": 0.00377, "loss_rpn_cls0_w0.5": 0.00119, "loss_rpn_bbox0_w0.5": 0.00101, "loss_rpn_cls1": 0.00166, "loss_rpn_bbox1": 0.0015, "s0.loss_cls0_w0.5": 0.04488, "s0.acc0": 48.24414, "s0.loss_bbox0_w0.5": 0.06219, "s1.loss_cls0_w0.5": 0.01417, "s1.acc0": 48.88477, "s1.loss_bbox0_w0.5": 0.01539, "s2.loss_cls0_w0.5": 0.00313, "s2.acc0": 49.51172, "s2.loss_bbox0_w0.5": 0.00266, "s0.loss_cls1": 0.0776, "s0.acc1": 96.83594, "s0.loss_bbox1": 0.11647, "s1.loss_cls1": 0.02497, "s1.acc1": 97.96484, "s1.loss_bbox1": 0.02898, "s2.loss_cls1": 0.00561, "s2.acc1": 99.11719, "s2.loss_bbox1": 0.00503, "loss": 0.40645, "time": 0.73005}
{"mode": "train", "epoch": 1, "iter": 500, "lr": 1e-05, "memory": 8992, "data_time": 0.00376, "loss_rpn_cls0_w0.5": 0.00153, "loss_rpn_bbox0_w0.5": 0.00132, "loss_rpn_cls1": 0.00169, "loss_rpn_bbox1": 0.00192, "s0.loss_cls0_w0.5": 0.04682, "s0.acc0": 48.10352, "s0.loss_bbox0_w0.5": 0.0712, "s1.loss_cls0_w0.5": 0.01536, "s1.acc0": 48.73438, "s1.loss_bbox0_w0.5": 0.01731, "s2.loss_cls0_w0.5": 0.00372, "s2.acc0": 49.43555, "s2.loss_bbox0_w0.5": 0.00296, "s0.loss_cls1": 0.08415, "s0.acc1": 96.5, "s0.loss_bbox1": 0.13082, "s1.loss_cls1": 0.02772, "s1.acc1": 97.65234, "s1.loss_bbox1": 0.03161, "s2.loss_cls1": 0.00668, "s2.acc1": 98.93359, "s2.loss_bbox1": 0.00552, "loss": 0.45034, "time": 0.70137}
{"mode": "train", "epoch": 1, "iter": 550, "lr": 1e-05, "memory": 8992, "data_time": 0.00357, "loss_rpn_cls0_w0.5": 0.0011, "loss_rpn_bbox0_w0.5": 0.00091, "loss_rpn_cls1": 0.00201, "loss_rpn_bbox1": 0.00129, "s0.loss_cls0_w0.5": 0.03886, "s0.acc0": 48.36328, "s0.loss_bbox0_w0.5": 0.05246, "s1.loss_cls0_w0.5": 0.01204, "s1.acc0": 49.01367, "s1.loss_bbox0_w0.5": 0.01343, "s2.loss_cls0_w0.5": 0.0028, "s2.acc0": 49.57227, "s2.loss_bbox0_w0.5": 0.00239, "s0.loss_cls1": 0.0719, "s0.acc1": 96.69531, "s0.loss_bbox1": 0.09583, "s1.loss_cls1": 0.02235, "s1.acc1": 98.20703, "s1.loss_bbox1": 0.02483, "s2.loss_cls1": 0.00526, "s2.acc1": 99.16797, "s2.loss_bbox1": 0.00452, "loss": 0.35198, "time": 0.70394}
{"mode": "train", "epoch": 1, "iter": 600, "lr": 1e-05, "memory": 8992, "data_time": 0.00393, "loss_rpn_cls0_w0.5": 0.00114, "loss_rpn_bbox0_w0.5": 0.00124, "loss_rpn_cls1": 0.00142, "loss_rpn_bbox1": 0.00197, "s0.loss_cls0_w0.5": 0.05066, "s0.acc0": 47.99219, "s0.loss_bbox0_w0.5": 0.06224, "s1.loss_cls0_w0.5": 0.01565, "s1.acc0": 48.80859, "s1.loss_bbox0_w0.5": 0.01635, "s2.loss_cls0_w0.5": 0.00386, "s2.acc0": 49.44727, "s2.loss_bbox0_w0.5": 0.00289, "s0.loss_cls1": 0.08492, "s0.acc1": 96.5625, "s0.loss_bbox1": 0.11546, "s1.loss_cls1": 0.02703, "s1.acc1": 97.90625, "s1.loss_bbox1": 0.03011, "s2.loss_cls1": 0.00662, "s2.acc1": 98.99609, "s2.loss_bbox1": 0.00544, "loss": 0.42699, "time": 0.71367}
{"mode": "train", "epoch": 1, "iter": 650, "lr": 1e-05, "memory": 8992, "data_time": 0.00353, "loss_rpn_cls0_w0.5": 0.00161, "loss_rpn_bbox0_w0.5": 0.00137, "loss_rpn_cls1": 0.00223, "loss_rpn_bbox1": 0.00184, "s0.loss_cls0_w0.5": 0.04836, "s0.acc0": 47.99805, "s0.loss_bbox0_w0.5": 0.06003, "s1.loss_cls0_w0.5": 0.01622, "s1.acc0": 48.71875, "s1.loss_bbox0_w0.5": 0.01584, "s2.loss_cls0_w0.5": 0.00365, "s2.acc0": 49.42578, "s2.loss_bbox0_w0.5": 0.0029, "s0.loss_cls1": 0.08108, "s0.acc1": 96.55859, "s0.loss_bbox1": 0.10842, "s1.loss_cls1": 0.02774, "s1.acc1": 97.74219, "s1.loss_bbox1": 0.02886, "s2.loss_cls1": 0.0064, "s2.acc1": 98.95703, "s2.loss_bbox1": 0.00544, "loss": 0.41199, "time": 0.71872}
{"mode": "train", "epoch": 1, "iter": 700, "lr": 1e-05, "memory": 8992, "data_time": 0.00379, "loss_rpn_cls0_w0.5": 0.00073, "loss_rpn_bbox0_w0.5": 0.00094, "loss_rpn_cls1": 0.00105, "loss_rpn_bbox1": 0.00159, "s0.loss_cls0_w0.5": 0.03323, "s0.acc0": 48.5918, "s0.loss_bbox0_w0.5": 0.05502, "s1.loss_cls0_w0.5": 0.01159, "s1.acc0": 49.07812, "s1.loss_bbox0_w0.5": 0.01437, "s2.loss_cls0_w0.5": 0.00264, "s2.acc0": 49.58594, "s2.loss_bbox0_w0.5": 0.00237, "s0.loss_cls1": 0.06187, "s0.acc1": 97.49219, "s0.loss_bbox1": 0.09981, "s1.loss_cls1": 0.02182, "s1.acc1": 98.23438, "s1.loss_bbox1": 0.02575, "s2.loss_cls1": 0.00498, "s2.acc1": 99.21094, "s2.loss_bbox1": 0.00441, "loss": 0.34218, "time": 0.72971}
{"mode": "train", "epoch": 1, "iter": 750, "lr": 1e-05, "memory": 8992, "data_time": 0.00364, "loss_rpn_cls0_w0.5": 0.00134, "loss_rpn_bbox0_w0.5": 0.00166, "loss_rpn_cls1": 0.00086, "loss_rpn_bbox1": 0.00239, "s0.loss_cls0_w0.5": 0.04108, "s0.acc0": 48.28516, "s0.loss_bbox0_w0.5": 0.05834, "s1.loss_cls0_w0.5": 0.01474, "s1.acc0": 48.75781, "s1.loss_bbox0_w0.5": 0.01614, "s2.loss_cls0_w0.5": 0.00331, "s2.acc0": 49.50586, "s2.loss_bbox0_w0.5": 0.00295, "s0.loss_cls1": 0.07012, "s0.acc1": 96.85156, "s0.loss_bbox1": 0.10537, "s1.loss_cls1": 0.02528, "s1.acc1": 97.78906, "s1.loss_bbox1": 0.02992, "s2.loss_cls1": 0.00583, "s2.acc1": 99.12109, "s2.loss_bbox1": 0.00551, "loss": 0.38482, "time": 0.74395}
{"mode": "train", "epoch": 1, "iter": 800, "lr": 1e-05, "memory": 8992, "data_time": 0.00335, "loss_rpn_cls0_w0.5": 0.0016, "loss_rpn_bbox0_w0.5": 0.0015, "loss_rpn_cls1": 0.00216, "loss_rpn_bbox1": 0.00212, "s0.loss_cls0_w0.5": 0.05334, "s0.acc0": 47.85156, "s0.loss_bbox0_w0.5": 0.07196, "s1.loss_cls0_w0.5": 0.01738, "s1.acc0": 48.58398, "s1.loss_bbox0_w0.5": 0.02029, "s2.loss_cls0_w0.5": 0.00425, "s2.acc0": 49.3457, "s2.loss_bbox0_w0.5": 0.00372, "s0.loss_cls1": 0.09245, "s0.acc1": 96.20312, "s0.loss_bbox1": 0.12819, "s1.loss_cls1": 0.03, "s1.acc1": 97.53906, "s1.loss_bbox1": 0.03656, "s2.loss_cls1": 0.00766, "s2.acc1": 98.78125, "s2.loss_bbox1": 0.00701, "loss": 0.48019, "time": 0.70803}
{"mode": "train", "epoch": 1, "iter": 850, "lr": 1e-05, "memory": 8992, "data_time": 0.00359, "loss_rpn_cls0_w0.5": 0.00086, "loss_rpn_bbox0_w0.5": 0.0008, "loss_rpn_cls1": 0.00055, "loss_rpn_bbox1": 0.00128, "s0.loss_cls0_w0.5": 0.03154, "s0.acc0": 48.73828, "s0.loss_bbox0_w0.5": 0.05019, "s1.loss_cls0_w0.5": 0.01025, "s1.acc0": 49.12695, "s1.loss_bbox0_w0.5": 0.01186, "s2.loss_cls0_w0.5": 0.00248, "s2.acc0": 49.59961, "s2.loss_bbox0_w0.5": 0.00221, "s0.loss_cls1": 0.05561, "s0.acc1": 97.67969, "s0.loss_bbox1": 0.08879, "s1.loss_cls1": 0.01811, "s1.acc1": 98.44922, "s1.loss_bbox1": 0.02184, "s2.loss_cls1": 0.00448, "s2.acc1": 99.23438, "s2.loss_bbox1": 0.00418, "loss": 0.30502, "time": 0.70647}
{"mode": "train", "epoch": 1, "iter": 900, "lr": 1e-05, "memory": 8992, "data_time": 0.00376, "loss_rpn_cls0_w0.5": 0.00091, "loss_rpn_bbox0_w0.5": 0.00098, "loss_rpn_cls1": 0.00267, "loss_rpn_bbox1": 0.00153, "s0.loss_cls0_w0.5": 0.04663, "s0.acc0": 48.08398, "s0.loss_bbox0_w0.5": 0.06074, "s1.loss_cls0_w0.5": 0.01503, "s1.acc0": 48.81055, "s1.loss_bbox0_w0.5": 0.01546, "s2.loss_cls0_w0.5": 0.00355, "s2.acc0": 49.44727, "s2.loss_bbox0_w0.5": 0.00284, "s0.loss_cls1": 0.08062, "s0.acc1": 96.92578, "s0.loss_bbox1": 0.11035, "s1.loss_cls1": 0.02646, "s1.acc1": 97.92969, "s1.loss_bbox1": 0.02863, "s2.loss_cls1": 0.00659, "s2.acc1": 99.05078, "s2.loss_bbox1": 0.00529, "loss": 0.40829, "time": 0.7643}
{"mode": "train", "epoch": 1, "iter": 950, "lr": 1e-05, "memory": 8992, "data_time": 0.00361, "loss_rpn_cls0_w0.5": 0.00081, "loss_rpn_bbox0_w0.5": 0.00103, "loss_rpn_cls1": 0.00104, "loss_rpn_bbox1": 0.00148, "s0.loss_cls0_w0.5": 0.03459, "s0.acc0": 48.67383, "s0.loss_bbox0_w0.5": 0.05877, "s1.loss_cls0_w0.5": 0.01196, "s1.acc0": 49.0625, "s1.loss_bbox0_w0.5": 0.01479, "s2.loss_cls0_w0.5": 0.00292, "s2.acc0": 49.55664, "s2.loss_bbox0_w0.5": 0.00276, "s0.loss_cls1": 0.05948, "s0.acc1": 97.71094, "s0.loss_bbox1": 0.10726, "s1.loss_cls1": 0.02139, "s1.acc1": 98.26562, "s1.loss_bbox1": 0.02745, "s2.loss_cls1": 0.0053, "s2.acc1": 99.15234, "s2.loss_bbox1": 0.00523, "loss": 0.35628, "time": 0.73291}
{"mode": "train", "epoch": 1, "iter": 1000, "lr": 1e-05, "memory": 8992, "data_time": 0.00382, "loss_rpn_cls0_w0.5": 0.00068, "loss_rpn_bbox0_w0.5": 0.00126, "loss_rpn_cls1": 0.00079, "loss_rpn_bbox1": 0.00172, "s0.loss_cls0_w0.5": 0.04288, "s0.acc0": 48.24219, "s0.loss_bbox0_w0.5": 0.06647, "s1.loss_cls0_w0.5": 0.01474, "s1.acc0": 48.75195, "s1.loss_bbox0_w0.5": 0.01584, "s2.loss_cls0_w0.5": 0.00328, "s2.acc0": 49.49414, "s2.loss_bbox0_w0.5": 0.00296, "s0.loss_cls1": 0.07271, "s0.acc1": 96.91406, "s0.loss_bbox1": 0.1194, "s1.loss_cls1": 0.02536, "s1.acc1": 97.85547, "s1.loss_bbox1": 0.02907, "s2.loss_cls1": 0.00572, "s2.acc1": 99.08203, "s2.loss_bbox1": 0.00554, "loss": 0.40844, "time": 0.75586}
{"mode": "train", "epoch": 1, "iter": 1050, "lr": 1e-05, "memory": 8992, "data_time": 0.00357, "loss_rpn_cls0_w0.5": 0.00141, "loss_rpn_bbox0_w0.5": 0.00137, "loss_rpn_cls1": 0.00179, "loss_rpn_bbox1": 0.00205, "s0.loss_cls0_w0.5": 0.04979, "s0.acc0": 48.01758, "s0.loss_bbox0_w0.5": 0.0682, "s1.loss_cls0_w0.5": 0.01555, "s1.acc0": 48.75195, "s1.loss_bbox0_w0.5": 0.01721, "s2.loss_cls0_w0.5": 0.00368, "s2.acc0": 49.46289, "s2.loss_bbox0_w0.5": 0.00304, "s0.loss_cls1": 0.09349, "s0.acc1": 96.33984, "s0.loss_bbox1": 0.12638, "s1.loss_cls1": 0.02957, "s1.acc1": 97.67188, "s1.loss_bbox1": 0.03247, "s2.loss_cls1": 0.00699, "s2.acc1": 98.9375, "s2.loss_bbox1": 0.0058, "loss": 0.4588, "time": 0.70374}
{"mode": "val", "epoch": 1, "iter": 1053, "lr": 1e-05, "AP50": 0.975, "mAP": 0.97502}
{"mode": "val", "epoch": 1, "iter": 1053, "lr": 1e-05, "memory": 8992, "data_time": 0.00458, "loss_rpn_cls": 0.00185, "loss_rpn_bbox": 0.00185, "s0.loss_cls": 0.08269, "s0.acc": 96.68655, "s0.loss_bbox": 0.11506, "s1.loss_cls": 0.02649, "s1.acc": 97.85898, "s1.loss_bbox": 0.02957, "s2.loss_cls": 0.00635, "s2.acc": 99.00044, "s2.loss_bbox": 0.00548, "loss": 0.26933, "time": 0.21484}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 1e-05, "memory": 8992, "data_time": 0.04736, "loss_rpn_cls0_w0.5": 0.00079, "loss_rpn_bbox0_w0.5": 0.00137, "loss_rpn_cls1": 0.00192, "loss_rpn_bbox1": 0.00207, "s0.loss_cls0_w0.5": 0.04519, "s0.acc0": 48.12695, "s0.loss_bbox0_w0.5": 0.06824, "s1.loss_cls0_w0.5": 0.0158, "s1.acc0": 48.65234, "s1.loss_bbox0_w0.5": 0.01759, "s2.loss_cls0_w0.5": 0.00355, "s2.acc0": 49.44727, "s2.loss_bbox0_w0.5": 0.00299, "s0.loss_cls1": 0.07986, "s0.acc1": 96.70312, "s0.loss_bbox1": 0.12567, "s1.loss_cls1": 0.02878, "s1.acc1": 97.57812, "s1.loss_bbox1": 0.03273, "s2.loss_cls1": 0.00663, "s2.acc1": 98.91406, "s2.loss_bbox1": 0.00571, "loss": 0.43889, "time": 0.76006}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 1e-05, "memory": 8992, "data_time": 0.00377, "loss_rpn_cls0_w0.5": 0.00135, "loss_rpn_bbox0_w0.5": 0.00139, "loss_rpn_cls1": 0.0017, "loss_rpn_bbox1": 0.00201, "s0.loss_cls0_w0.5": 0.05077, "s0.acc0": 47.85938, "s0.loss_bbox0_w0.5": 0.06703, "s1.loss_cls0_w0.5": 0.01619, "s1.acc0": 48.67188, "s1.loss_bbox0_w0.5": 0.01786, "s2.loss_cls0_w0.5": 0.00421, "s2.acc0": 49.31445, "s2.loss_bbox0_w0.5": 0.00334, "s0.loss_cls1": 0.08742, "s0.acc1": 96.45312, "s0.loss_bbox1": 0.12464, "s1.loss_cls1": 0.0287, "s1.acc1": 97.55469, "s1.loss_bbox1": 0.03289, "s2.loss_cls1": 0.00743, "s2.acc1": 98.75, "s2.loss_bbox1": 0.00629, "loss": 0.4532, "time": 0.68786}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 1e-05, "memory": 8992, "data_time": 0.00365, "loss_rpn_cls0_w0.5": 0.00143, "loss_rpn_bbox0_w0.5": 0.00149, "loss_rpn_cls1": 0.00323, "loss_rpn_bbox1": 0.00226, "s0.loss_cls0_w0.5": 0.04913, "s0.acc0": 47.91992, "s0.loss_bbox0_w0.5": 0.06234, "s1.loss_cls0_w0.5": 0.01489, "s1.acc0": 48.79688, "s1.loss_bbox0_w0.5": 0.01523, "s2.loss_cls0_w0.5": 0.00369, "s2.acc0": 49.44531, "s2.loss_bbox0_w0.5": 0.00296, "s0.loss_cls1": 0.0842, "s0.acc1": 96.4375, "s0.loss_bbox1": 0.11421, "s1.loss_cls1": 0.02669, "s1.acc1": 97.94922, "s1.loss_bbox1": 0.02825, "s2.loss_cls1": 0.00649, "s2.acc1": 99.01562, "s2.loss_bbox1": 0.00566, "loss": 0.42215, "time": 0.70798}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 1e-05, "memory": 8992, "data_time": 0.00368, "loss_rpn_cls0_w0.5": 0.00139, "loss_rpn_bbox0_w0.5": 0.00127, "loss_rpn_cls1": 0.00223, "loss_rpn_bbox1": 0.0019, "s0.loss_cls0_w0.5": 0.04438, "s0.acc0": 48.22852, "s0.loss_bbox0_w0.5": 0.06452, "s1.loss_cls0_w0.5": 0.01401, "s1.acc0": 48.9043, "s1.loss_bbox0_w0.5": 0.01554, "s2.loss_cls0_w0.5": 0.00338, "s2.acc0": 49.51172, "s2.loss_bbox0_w0.5": 0.00278, "s0.loss_cls1": 0.0751, "s0.acc1": 97.00391, "s0.loss_bbox1": 0.12091, "s1.loss_cls1": 0.02438, "s1.acc1": 98.01953, "s1.loss_bbox1": 0.02946, "s2.loss_cls1": 0.00606, "s2.acc1": 99.14062, "s2.loss_bbox1": 0.00538, "loss": 0.4127, "time": 0.72892}
{"mode": "train", "epoch": 2, "iter": 250, "lr": 1e-05, "memory": 8992, "data_time": 0.00359, "loss_rpn_cls0_w0.5": 0.00166, "loss_rpn_bbox0_w0.5": 0.00208, "loss_rpn_cls1": 0.00229, "loss_rpn_bbox1": 0.00291, "s0.loss_cls0_w0.5": 0.06178, "s0.acc0": 47.43555, "s0.loss_bbox0_w0.5": 0.08093, "s1.loss_cls0_w0.5": 0.02007, "s1.acc0": 48.33789, "s1.loss_bbox0_w0.5": 0.02177, "s2.loss_cls0_w0.5": 0.005, "s2.acc0": 49.22266, "s2.loss_bbox0_w0.5": 0.00442, "s0.loss_cls1": 0.10696, "s0.acc1": 95.79688, "s0.loss_bbox1": 0.14714, "s1.loss_cls1": 0.03551, "s1.acc1": 97.09766, "s1.loss_bbox1": 0.04058, "s2.loss_cls1": 0.00902, "s2.acc1": 98.69141, "s2.loss_bbox1": 0.00836, "loss": 0.55048, "time": 0.71504}
{"mode": "train", "epoch": 2, "iter": 300, "lr": 1e-05, "memory": 8992, "data_time": 0.00375, "loss_rpn_cls0_w0.5": 0.00078, "loss_rpn_bbox0_w0.5": 0.00121, "loss_rpn_cls1": 0.00143, "loss_rpn_bbox1": 0.00204, "s0.loss_cls0_w0.5": 0.04797, "s0.acc0": 47.92578, "s0.loss_bbox0_w0.5": 0.07374, "s1.loss_cls0_w0.5": 0.01562, "s1.acc0": 48.66211, "s1.loss_bbox0_w0.5": 0.01837, "s2.loss_cls0_w0.5": 0.00399, "s2.acc0": 49.4082, "s2.loss_bbox0_w0.5": 0.00333, "s0.loss_cls1": 0.08651, "s0.acc1": 96.29688, "s0.loss_bbox1": 0.13491, "s1.loss_cls1": 0.02817, "s1.acc1": 97.59375, "s1.loss_bbox1": 0.03459, "s2.loss_cls1": 0.00743, "s2.acc1": 98.85938, "s2.loss_bbox1": 0.00638, "loss": 0.46646, "time": 0.73212}
{"mode": "train", "epoch": 2, "iter": 350, "lr": 1e-05, "memory": 8992, "data_time": 0.00358, "loss_rpn_cls0_w0.5": 0.001, "loss_rpn_bbox0_w0.5": 0.00085, "loss_rpn_cls1": 0.00132, "loss_rpn_bbox1": 0.00121, "s0.loss_cls0_w0.5": 0.038, "s0.acc0": 48.40625, "s0.loss_bbox0_w0.5": 0.05045, "s1.loss_cls0_w0.5": 0.01136, "s1.acc0": 49.07617, "s1.loss_bbox0_w0.5": 0.01167, "s2.loss_cls0_w0.5": 0.00255, "s2.acc0": 49.62695, "s2.loss_bbox0_w0.5": 0.00206, "s0.loss_cls1": 0.06543, "s0.acc1": 97.41797, "s0.loss_bbox1": 0.09406, "s1.loss_cls1": 0.02024, "s1.acc1": 98.36719, "s1.loss_bbox1": 0.02168, "s2.loss_cls1": 0.00453, "s2.acc1": 99.32812, "s2.loss_bbox1": 0.0039, "loss": 0.33032, "time": 0.7242}
{"mode": "train", "epoch": 2, "iter": 400, "lr": 1e-05, "memory": 8992, "data_time": 0.00364, "loss_rpn_cls0_w0.5": 0.00108, "loss_rpn_bbox0_w0.5": 0.00134, "loss_rpn_cls1": 0.00192, "loss_rpn_bbox1": 0.00196, "s0.loss_cls0_w0.5": 0.04846, "s0.acc0": 48.01953, "s0.loss_bbox0_w0.5": 0.06545, "s1.loss_cls0_w0.5": 0.01561, "s1.acc0": 48.68555, "s1.loss_bbox0_w0.5": 0.01726, "s2.loss_cls0_w0.5": 0.00366, "s2.acc0": 49.43945, "s2.loss_bbox0_w0.5": 0.00321, "s0.loss_cls1": 0.08608, "s0.acc1": 96.32812, "s0.loss_bbox1": 0.11887, "s1.loss_cls1": 0.02808, "s1.acc1": 97.60156, "s1.loss_bbox1": 0.03211, "s2.loss_cls1": 0.00672, "s2.acc1": 98.96875, "s2.loss_bbox1": 0.00616, "loss": 0.43798, "time": 0.72121}
{"mode": "train", "epoch": 2, "iter": 450, "lr": 1e-05, "memory": 8992, "data_time": 0.00335, "loss_rpn_cls0_w0.5": 0.00075, "loss_rpn_bbox0_w0.5": 0.00094, "loss_rpn_cls1": 0.00105, "loss_rpn_bbox1": 0.0013, "s0.loss_cls0_w0.5": 0.03387, "s0.acc0": 48.62305, "s0.loss_bbox0_w0.5": 0.04894, "s1.loss_cls0_w0.5": 0.01077, "s1.acc0": 49.0957, "s1.loss_bbox0_w0.5": 0.01114, "s2.loss_cls0_w0.5": 0.00251, "s2.acc0": 49.5957, "s2.loss_bbox0_w0.5": 0.00201, "s0.loss_cls1": 0.05866, "s0.acc1": 97.79688, "s0.loss_bbox1": 0.08644, "s1.loss_cls1": 0.01857, "s1.acc1": 98.51562, "s1.loss_bbox1": 0.02021, "s2.loss_cls1": 0.0044, "s2.acc1": 99.26562, "s2.loss_bbox1": 0.0037, "loss": 0.30526, "time": 0.70291}
{"mode": "train", "epoch": 2, "iter": 500, "lr": 1e-05, "memory": 8992, "data_time": 0.00363, "loss_rpn_cls0_w0.5": 0.0014, "loss_rpn_bbox0_w0.5": 0.00139, "loss_rpn_cls1": 0.00122, "loss_rpn_bbox1": 0.00199, "s0.loss_cls0_w0.5": 0.04319, "s0.acc0": 48.27148, "s0.loss_bbox0_w0.5": 0.05932, "s1.loss_cls0_w0.5": 0.01459, "s1.acc0": 48.78906, "s1.loss_bbox0_w0.5": 0.01496, "s2.loss_cls0_w0.5": 0.00337, "s2.acc0": 49.48438, "s2.loss_bbox0_w0.5": 0.00265, "s0.loss_cls1": 0.07425, "s0.acc1": 96.91406, "s0.loss_bbox1": 0.10989, "s1.loss_cls1": 0.02559, "s1.acc1": 97.93359, "s1.loss_bbox1": 0.02813, "s2.loss_cls1": 0.00604, "s2.acc1": 99.03906, "s2.loss_bbox1": 0.00508, "loss": 0.39305, "time": 0.7239}
{"mode": "train", "epoch": 2, "iter": 550, "lr": 1e-05, "memory": 8992, "data_time": 0.00366, "loss_rpn_cls0_w0.5": 0.00127, "loss_rpn_bbox0_w0.5": 0.00116, "loss_rpn_cls1": 0.00165, "loss_rpn_bbox1": 0.00167, "s0.loss_cls0_w0.5": 0.03952, "s0.acc0": 48.40039, "s0.loss_bbox0_w0.5": 0.0564, "s1.loss_cls0_w0.5": 0.01295, "s1.acc0": 48.96484, "s1.loss_bbox0_w0.5": 0.01348, "s2.loss_cls0_w0.5": 0.00288, "s2.acc0": 49.56836, "s2.loss_bbox0_w0.5": 0.00233, "s0.loss_cls1": 0.07082, "s0.acc1": 97.17578, "s0.loss_bbox1": 0.10554, "s1.loss_cls1": 0.02382, "s1.acc1": 98.08203, "s1.loss_bbox1": 0.02561, "s2.loss_cls1": 0.00529, "s2.acc1": 99.23047, "s2.loss_bbox1": 0.00438, "loss": 0.36875, "time": 0.72539}
{"mode": "train", "epoch": 2, "iter": 600, "lr": 1e-05, "memory": 8992, "data_time": 0.00369, "loss_rpn_cls0_w0.5": 0.00205, "loss_rpn_bbox0_w0.5": 0.00143, "loss_rpn_cls1": 0.00189, "loss_rpn_bbox1": 0.00189, "s0.loss_cls0_w0.5": 0.05486, "s0.acc0": 47.79297, "s0.loss_bbox0_w0.5": 0.06956, "s1.loss_cls0_w0.5": 0.01749, "s1.acc0": 48.625, "s1.loss_bbox0_w0.5": 0.01776, "s2.loss_cls0_w0.5": 0.00405, "s2.acc0": 49.39062, "s2.loss_bbox0_w0.5": 0.00314, "s0.loss_cls1": 0.09486, "s0.acc1": 96.30859, "s0.loss_bbox1": 0.12611, "s1.loss_cls1": 0.03125, "s1.acc1": 97.64062, "s1.loss_bbox1": 0.0326, "s2.loss_cls1": 0.00751, "s2.acc1": 98.86719, "s2.loss_bbox1": 0.00595, "loss": 0.47238, "time": 0.7215}
{"mode": "train", "epoch": 2, "iter": 650, "lr": 1e-05, "memory": 8992, "data_time": 0.00366, "loss_rpn_cls0_w0.5": 0.0005, "loss_rpn_bbox0_w0.5": 0.001, "loss_rpn_cls1": 0.00143, "loss_rpn_bbox1": 0.00139, "s0.loss_cls0_w0.5": 0.03197, "s0.acc0": 48.72656, "s0.loss_bbox0_w0.5": 0.04697, "s1.loss_cls0_w0.5": 0.01002, "s1.acc0": 49.17773, "s1.loss_bbox0_w0.5": 0.01123, "s2.loss_cls0_w0.5": 0.00224, "s2.acc0": 49.66797, "s2.loss_bbox0_w0.5": 0.0018, "s0.loss_cls1": 0.05616, "s0.acc1": 97.75, "s0.loss_bbox1": 0.08439, "s1.loss_cls1": 0.01733, "s1.acc1": 98.5625, "s1.loss_bbox1": 0.02083, "s2.loss_cls1": 0.00395, "s2.acc1": 99.41797, "s2.loss_bbox1": 0.00346, "loss": 0.29467, "time": 0.69995}
{"mode": "train", "epoch": 2, "iter": 700, "lr": 1e-05, "memory": 8992, "data_time": 0.00365, "loss_rpn_cls0_w0.5": 0.00079, "loss_rpn_bbox0_w0.5": 0.00084, "loss_rpn_cls1": 0.00209, "loss_rpn_bbox1": 0.00126, "s0.loss_cls0_w0.5": 0.03614, "s0.acc0": 48.49414, "s0.loss_bbox0_w0.5": 0.05395, "s1.loss_cls0_w0.5": 0.01196, "s1.acc0": 48.99609, "s1.loss_bbox0_w0.5": 0.01343, "s2.loss_cls0_w0.5": 0.0028, "s2.acc0": 49.55273, "s2.loss_bbox0_w0.5": 0.00239, "s0.loss_cls1": 0.06318, "s0.acc1": 97.52344, "s0.loss_bbox1": 0.09826, "s1.loss_cls1": 0.02136, "s1.acc1": 98.19531, "s1.loss_bbox1": 0.02483, "s2.loss_cls1": 0.00518, "s2.acc1": 99.13281, "s2.loss_bbox1": 0.00449, "loss": 0.34293, "time": 0.71468}
{"mode": "train", "epoch": 2, "iter": 750, "lr": 1e-05, "memory": 8992, "data_time": 0.00358, "loss_rpn_cls0_w0.5": 0.00074, "loss_rpn_bbox0_w0.5": 0.00109, "loss_rpn_cls1": 0.0015, "loss_rpn_bbox1": 0.00154, "s0.loss_cls0_w0.5": 0.03824, "s0.acc0": 48.38867, "s0.loss_bbox0_w0.5": 0.05489, "s1.loss_cls0_w0.5": 0.01259, "s1.acc0": 48.95312, "s1.loss_bbox0_w0.5": 0.01397, "s2.loss_cls0_w0.5": 0.00313, "s2.acc0": 49.52539, "s2.loss_bbox0_w0.5": 0.00266, "s0.loss_cls1": 0.06105, "s0.acc1": 97.55859, "s0.loss_bbox1": 0.09667, "s1.loss_cls1": 0.02088, "s1.acc1": 98.32812, "s1.loss_bbox1": 0.02553, "s2.loss_cls1": 0.00549, "s2.acc1": 99.14453, "s2.loss_bbox1": 0.00494, "loss": 0.34489, "time": 0.73426}
{"mode": "train", "epoch": 2, "iter": 800, "lr": 1e-05, "memory": 8992, "data_time": 0.00351, "loss_rpn_cls0_w0.5": 0.00166, "loss_rpn_bbox0_w0.5": 0.00164, "loss_rpn_cls1": 0.0026, "loss_rpn_bbox1": 0.00239, "s0.loss_cls0_w0.5": 0.06474, "s0.acc0": 47.26562, "s0.loss_bbox0_w0.5": 0.08668, "s1.loss_cls0_w0.5": 0.02138, "s1.acc0": 48.26172, "s1.loss_bbox0_w0.5": 0.02215, "s2.loss_cls0_w0.5": 0.00497, "s2.acc0": 49.25195, "s2.loss_bbox0_w0.5": 0.00387, "s0.loss_cls1": 0.11507, "s0.acc1": 95.39062, "s0.loss_bbox1": 0.15644, "s1.loss_cls1": 0.03829, "s1.acc1": 97.00781, "s1.loss_bbox1": 0.04067, "s2.loss_cls1": 0.00895, "s2.acc1": 98.67578, "s2.loss_bbox1": 0.00729, "loss": 0.57879, "time": 0.73587}
{"mode": "train", "epoch": 2, "iter": 850, "lr": 1e-05, "memory": 8992, "data_time": 0.00379, "loss_rpn_cls0_w0.5": 0.00159, "loss_rpn_bbox0_w0.5": 0.00197, "loss_rpn_cls1": 0.00225, "loss_rpn_bbox1": 0.0026, "s0.loss_cls0_w0.5": 0.04392, "s0.acc0": 48.18945, "s0.loss_bbox0_w0.5": 0.06491, "s1.loss_cls0_w0.5": 0.01403, "s1.acc0": 48.80859, "s1.loss_bbox0_w0.5": 0.01589, "s2.loss_cls0_w0.5": 0.00366, "s2.acc0": 49.41406, "s2.loss_bbox0_w0.5": 0.00295, "s0.loss_cls1": 0.07562, "s0.acc1": 96.85156, "s0.loss_bbox1": 0.12014, "s1.loss_cls1": 0.02465, "s1.acc1": 97.9375, "s1.loss_bbox1": 0.02948, "s2.loss_cls1": 0.00642, "s2.acc1": 98.92969, "s2.loss_bbox1": 0.00552, "loss": 0.4156, "time": 0.71834}
{"mode": "train", "epoch": 2, "iter": 900, "lr": 1e-05, "memory": 8992, "data_time": 0.00379, "loss_rpn_cls0_w0.5": 0.00144, "loss_rpn_bbox0_w0.5": 0.00118, "loss_rpn_cls1": 0.00192, "loss_rpn_bbox1": 0.00178, "s0.loss_cls0_w0.5": 0.04497, "s0.acc0": 48.125, "s0.loss_bbox0_w0.5": 0.05684, "s1.loss_cls0_w0.5": 0.01428, "s1.acc0": 48.88281, "s1.loss_bbox0_w0.5": 0.01483, "s2.loss_cls0_w0.5": 0.0035, "s2.acc0": 49.45508, "s2.loss_bbox0_w0.5": 0.00293, "s0.loss_cls1": 0.07546, "s0.acc1": 96.92578, "s0.loss_bbox1": 0.1071, "s1.loss_cls1": 0.02413, "s1.acc1": 98.03125, "s1.loss_bbox1": 0.0282, "s2.loss_cls1": 0.00629, "s2.acc1": 99.04297, "s2.loss_bbox1": 0.00553, "loss": 0.39038, "time": 0.75558}
{"mode": "train", "epoch": 2, "iter": 950, "lr": 1e-05, "memory": 8992, "data_time": 0.00389, "loss_rpn_cls0_w0.5": 0.00143, "loss_rpn_bbox0_w0.5": 0.00128, "loss_rpn_cls1": 0.00196, "loss_rpn_bbox1": 0.00185, "s0.loss_cls0_w0.5": 0.05285, "s0.acc0": 47.95117, "s0.loss_bbox0_w0.5": 0.06181, "s1.loss_cls0_w0.5": 0.01705, "s1.acc0": 48.70703, "s1.loss_bbox0_w0.5": 0.01675, "s2.loss_cls0_w0.5": 0.00414, "s2.acc0": 49.375, "s2.loss_bbox0_w0.5": 0.00297, "s0.loss_cls1": 0.08739, "s0.acc1": 96.53516, "s0.loss_bbox1": 0.11172, "s1.loss_cls1": 0.0295, "s1.acc1": 97.73047, "s1.loss_bbox1": 0.03056, "s2.loss_cls1": 0.00731, "s2.acc1": 98.86719, "s2.loss_bbox1": 0.00562, "loss": 0.43418, "time": 0.7351}
{"mode": "train", "epoch": 2, "iter": 1000, "lr": 1e-05, "memory": 8992, "data_time": 0.00374, "loss_rpn_cls0_w0.5": 0.00126, "loss_rpn_bbox0_w0.5": 0.00101, "loss_rpn_cls1": 0.0018, "loss_rpn_bbox1": 0.00149, "s0.loss_cls0_w0.5": 0.04006, "s0.acc0": 48.27148, "s0.loss_bbox0_w0.5": 0.06122, "s1.loss_cls0_w0.5": 0.01301, "s1.acc0": 48.95508, "s1.loss_bbox0_w0.5": 0.01489, "s2.loss_cls0_w0.5": 0.00329, "s2.acc0": 49.49219, "s2.loss_bbox0_w0.5": 0.00258, "s0.loss_cls1": 0.07154, "s0.acc1": 96.88672, "s0.loss_bbox1": 0.11101, "s1.loss_cls1": 0.02373, "s1.acc1": 98.12109, "s1.loss_bbox1": 0.02786, "s2.loss_cls1": 0.00585, "s2.acc1": 99.05469, "s2.loss_bbox1": 0.00488, "loss": 0.38548, "time": 0.7123}
{"mode": "train", "epoch": 2, "iter": 1050, "lr": 1e-05, "memory": 8992, "data_time": 0.0036, "loss_rpn_cls0_w0.5": 0.00098, "loss_rpn_bbox0_w0.5": 0.0011, "loss_rpn_cls1": 0.00109, "loss_rpn_bbox1": 0.00171, "s0.loss_cls0_w0.5": 0.0362, "s0.acc0": 48.52734, "s0.loss_bbox0_w0.5": 0.06207, "s1.loss_cls0_w0.5": 0.01221, "s1.acc0": 48.99805, "s1.loss_bbox0_w0.5": 0.01585, "s2.loss_cls0_w0.5": 0.00297, "s2.acc0": 49.53516, "s2.loss_bbox0_w0.5": 0.00269, "s0.loss_cls1": 0.06293, "s0.acc1": 97.42969, "s0.loss_bbox1": 0.1135, "s1.loss_cls1": 0.02107, "s1.acc1": 98.21094, "s1.loss_bbox1": 0.02904, "s2.loss_cls1": 0.0051, "s2.acc1": 99.17188, "s2.loss_bbox1": 0.00504, "loss": 0.37356, "time": 0.7324}
{"mode": "val", "epoch": 2, "iter": 1053, "lr": 1e-05, "AP50": 0.982, "mAP": 0.98167}
{"mode": "val", "epoch": 2, "iter": 1053, "lr": 1e-05, "memory": 8992, "data_time": 0.00454, "loss_rpn_cls": 0.00135, "loss_rpn_bbox": 0.00161, "s0.loss_cls": 0.07244, "s0.acc": 96.99371, "s0.loss_bbox": 0.11386, "s1.loss_cls": 0.02483, "s1.acc": 97.96155, "s1.loss_bbox": 0.02993, "s2.loss_cls": 0.0061, "s2.acc": 99.0342, "s2.loss_bbox": 0.00555, "loss": 0.25568, "time": 0.21497}
