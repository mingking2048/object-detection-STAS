2022-05-31 12:59:08,816 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.8.12 (default, Jan 15 2022, 18:39:47) [GCC 7.5.0]
CUDA available: True
GPU 0: GeForce RTX 2080 Ti
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 10.2, V10.2.89
GCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0
PyTorch: 1.10.2+cu102
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=10.2, CUDNN_VERSION=7.6.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.2, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

TorchVision: 0.11.3+cu102
OpenCV: 4.5.5
MMCV: 1.4.0
MMCV Compiler: GCC 7.3
MMCV CUDA Compiler: 10.2
MMDetection: 2.14.0+a546be5
------------------------------------------------------------

2022-05-31 12:59:10,150 - mmdet - INFO - Distributed training: False
2022-05-31 12:59:11,309 - mmdet - INFO - Config:
model = dict(
    type='HybridTaskCascade',
    pretrained=None,
    backbone=dict(
        type='CBSwinTransformer',
        embed_dim=128,
        depths=[2, 2, 18, 2],
        num_heads=[4, 8, 16, 32],
        window_size=7,
        mlp_ratio=4.0,
        qkv_bias=True,
        qk_scale=None,
        drop_rate=0.0,
        attn_drop_rate=0.0,
        drop_path_rate=0.3,
        ape=False,
        patch_norm=True,
        out_indices=(0, 1, 2, 3),
        use_checkpoint=False),
    neck=dict(
        type='CBFPN',
        in_channels=[128, 256, 512, 1024],
        out_channels=256,
        num_outs=5),
    rpn_head=dict(
        type='RPNHead',
        in_channels=256,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            scales=[4],
            ratios=[0.78, 0.92, 1.0, 1.2, 1.41],
            strides=[4, 8, 16, 32, 64]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[0.0, 0.0, 0.0, 0.0],
            target_stds=[1.0, 1.0, 1.0, 1.0]),
        loss_bbox=dict(
            type='SmoothL1Loss', beta=0.1111111111111111, loss_weight=1.0)),
    roi_head=dict(
        type='HybridTaskCascadeRoIHead',
        interleaved=True,
        mask_info_flow=True,
        num_stages=3,
        stage_loss_weights=[1, 0.5, 0.25],
        bbox_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        bbox_head=[
            dict(
                type='ConvFCBBoxHead',
                num_shared_convs=4,
                num_shared_fcs=1,
                in_channels=256,
                conv_out_channels=256,
                fc_out_channels=1024,
                roi_feat_size=7,
                num_classes=1,
                bbox_coder=dict(
                    type='DeltaXYWHBBoxCoder',
                    target_means=[0.0, 0.0, 0.0, 0.0],
                    target_stds=[0.1, 0.1, 0.2, 0.2]),
                reg_class_agnostic=True,
                reg_decoded_bbox=True,
                norm_cfg=dict(type='SyncBN', requires_grad=True),
                loss_bbox=dict(type='CIoULoss', loss_weight=10.0)),
            dict(
                type='ConvFCBBoxHead',
                num_shared_convs=4,
                num_shared_fcs=1,
                in_channels=256,
                conv_out_channels=256,
                fc_out_channels=1024,
                roi_feat_size=7,
                num_classes=1,
                bbox_coder=dict(
                    type='DeltaXYWHBBoxCoder',
                    target_means=[0.0, 0.0, 0.0, 0.0],
                    target_stds=[0.05, 0.05, 0.1, 0.1]),
                reg_class_agnostic=True,
                reg_decoded_bbox=True,
                norm_cfg=dict(type='SyncBN', requires_grad=True),
                loss_bbox=dict(type='CIoULoss', loss_weight=10.0)),
            dict(
                type='ConvFCBBoxHead',
                num_shared_convs=4,
                num_shared_fcs=1,
                in_channels=256,
                conv_out_channels=256,
                fc_out_channels=1024,
                roi_feat_size=7,
                num_classes=1,
                bbox_coder=dict(
                    type='DeltaXYWHBBoxCoder',
                    target_means=[0.0, 0.0, 0.0, 0.0],
                    target_stds=[0.033, 0.033, 0.067, 0.067]),
                reg_class_agnostic=True,
                reg_decoded_bbox=True,
                norm_cfg=dict(type='SyncBN', requires_grad=True),
                loss_bbox=dict(type='CIoULoss', loss_weight=10.0))
        ]),
    train_cfg=dict(
        rpn=dict(
            assigner=dict(
                type='MaxIoUAssigner',
                pos_iou_thr=0.7,
                neg_iou_thr=0.3,
                min_pos_iou=0.3,
                ignore_iof_thr=-1),
            sampler=dict(
                type='RandomSampler',
                num=256,
                pos_fraction=0.5,
                neg_pos_ub=-1,
                add_gt_as_proposals=False),
            allowed_border=0,
            pos_weight=-1,
            debug=False),
        rpn_proposal=dict(
            nms_pre=2000,
            max_per_img=2000,
            nms=dict(type='nms', iou_threshold=0.7),
            min_bbox_size=0),
        rcnn=[
            dict(
                assigner=dict(
                    type='MaxIoUAssigner',
                    pos_iou_thr=0.5,
                    neg_iou_thr=0.5,
                    min_pos_iou=0.5,
                    ignore_iof_thr=-1),
                sampler=dict(
                    type='OHEMSampler',
                    num=512,
                    pos_fraction=0.25,
                    neg_pos_ub=-1,
                    add_gt_as_proposals=True),
                mask_size=28,
                pos_weight=-1,
                debug=False),
            dict(
                assigner=dict(
                    type='MaxIoUAssigner',
                    pos_iou_thr=0.6,
                    neg_iou_thr=0.6,
                    min_pos_iou=0.6,
                    ignore_iof_thr=-1),
                sampler=dict(
                    type='OHEMSampler',
                    num=512,
                    pos_fraction=0.25,
                    neg_pos_ub=-1,
                    add_gt_as_proposals=True),
                mask_size=28,
                pos_weight=-1,
                debug=False),
            dict(
                assigner=dict(
                    type='MaxIoUAssigner',
                    pos_iou_thr=0.7,
                    neg_iou_thr=0.7,
                    min_pos_iou=0.7,
                    ignore_iof_thr=-1),
                sampler=dict(
                    type='OHEMSampler',
                    num=512,
                    pos_fraction=0.25,
                    neg_pos_ub=-1,
                    add_gt_as_proposals=True),
                mask_size=28,
                pos_weight=-1,
                debug=False)
        ]),
    test_cfg=dict(
        rpn=dict(
            nms_pre=1000,
            max_per_img=1000,
            nms=dict(type='soft_nms', iou_threshold=0.7),
            min_bbox_size=0),
        rcnn=dict(
            score_thr=0.05,
            nms=dict(type='soft_nms', iou_threshold=0.5),
            max_per_img=200,
            mask_thr_binary=0.5,
            iou_threshold=0.5)))
optimizer = dict(
    type='AdamW',
    lr=5e-05,
    betas=(0.9, 0.999),
    weight_decay=0.05,
    paramwise_cfg=dict(
        custom_keys=dict(
            absolute_pos_embed=dict(decay_mult=0.0),
            relative_position_bias_table=dict(decay_mult=0.0),
            norm=dict(decay_mult=0.0))))
optimizer_config = dict(
    grad_clip=None,
    type='DistOptimizerHook',
    update_interval=1,
    coalesce=True,
    bucket_size_mb=-1,
    use_fp16=True)
checkpoint_config = dict(interval=1)
log_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])
custom_hooks = [dict(type='NumClassCheckHook')]
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = 'ckpt/htc_cbv2_swin_base22k_patch4_window7_mstrain_400-1400_giou_4conv1f_adamw_20e_coco.pth'
resume_from = None
workflow = [('train', 1), ('val', 1)]
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
fp16 = None
dataset_type = 'CustomDataset'
data_root = 'data/OBJ_Train_Datasets/'
mutli_scale_image_size = [(686, 376), (950, 520)]
test_mutli_scale_image_size = [(858, 471), (943, 518), (1000, 565),
                               (1115, 612), (1200, 660)]
albu_train_transforms = [
    dict(
        type='RandomBrightnessContrast',
        brightness_limit=[0.1, 0.3],
        contrast_limit=[0.1, 0.3],
        p=0.1),
    dict(
        type='OneOf',
        transforms=[
            dict(
                type='RGBShift',
                r_shift_limit=10,
                g_shift_limit=10,
                b_shift_limit=10,
                p=1.0),
            dict(
                type='HueSaturationValue',
                hue_shift_limit=20,
                sat_shift_limit=30,
                val_shift_limit=20,
                p=1.0),
            dict(type='FancyPCA', alpha=0.1, always_apply=False, p=1.0)
        ],
        p=0.1),
    dict(
        type='OneOf',
        transforms=[
            dict(type='Blur', blur_limit=3, p=1.0),
            dict(type='MedianBlur', blur_limit=3, p=1.0),
            dict(type='MotionBlur', blur_limit=6, always_apply=False, p=1.0)
        ],
        p=0.1)
]
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        type='Resize',
        img_scale=[(686, 376), (950, 520)],
        multiscale_mode='range',
        keep_ratio=True),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(
        type='Albu',
        transforms=[
            dict(
                type='RandomBrightnessContrast',
                brightness_limit=[0.1, 0.3],
                contrast_limit=[0.1, 0.3],
                p=0.1),
            dict(
                type='OneOf',
                transforms=[
                    dict(
                        type='RGBShift',
                        r_shift_limit=10,
                        g_shift_limit=10,
                        b_shift_limit=10,
                        p=1.0),
                    dict(
                        type='HueSaturationValue',
                        hue_shift_limit=20,
                        sat_shift_limit=30,
                        val_shift_limit=20,
                        p=1.0),
                    dict(
                        type='FancyPCA', alpha=0.1, always_apply=False, p=1.0)
                ],
                p=0.1),
            dict(
                type='OneOf',
                transforms=[
                    dict(type='Blur', blur_limit=3, p=1.0),
                    dict(type='MedianBlur', blur_limit=3, p=1.0),
                    dict(
                        type='MotionBlur',
                        blur_limit=6,
                        always_apply=False,
                        p=1.0)
                ],
                p=0.1)
        ],
        bbox_params=dict(
            type='BboxParams',
            format='pascal_voc',
            label_fields=['gt_labels'],
            min_visibility=0.0,
            filter_lost_elements=True),
        keymap=dict(img='image', gt_bboxes='bboxes'),
        update_pad_shape=False,
        skip_img_without_anno=True),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size_divisor=32),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=[(858, 471), (943, 518), (1000, 565), (1115, 612),
                   (1200, 660)],
        flip=True,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
samples_per_gpu = 1
workers_per_gpu = 1
runner = dict(type='EpochBasedRunnerAmp', max_epochs=7)
lr_config = dict(
    policy='step',
    warmup='linear',
    warmup_iters=500,
    warmup_ratio=0.001,
    step=[6, 10])
classes = ('stas', )
data = dict(
    samples_per_gpu=1,
    workers_per_gpu=1,
    train=dict(
        type='CustomDataset',
        classes=('stas', ),
        ann_file='data/OBJ_Train_Datasets/custom/STAS_final.pkl',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                type='Resize',
                img_scale=[(686, 376), (950, 520)],
                multiscale_mode='range',
                keep_ratio=True),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(
                type='Albu',
                transforms=[
                    dict(
                        type='RandomBrightnessContrast',
                        brightness_limit=[0.1, 0.3],
                        contrast_limit=[0.1, 0.3],
                        p=0.1),
                    dict(
                        type='OneOf',
                        transforms=[
                            dict(
                                type='RGBShift',
                                r_shift_limit=10,
                                g_shift_limit=10,
                                b_shift_limit=10,
                                p=1.0),
                            dict(
                                type='HueSaturationValue',
                                hue_shift_limit=20,
                                sat_shift_limit=30,
                                val_shift_limit=20,
                                p=1.0),
                            dict(
                                type='FancyPCA',
                                alpha=0.1,
                                always_apply=False,
                                p=1.0)
                        ],
                        p=0.1),
                    dict(
                        type='OneOf',
                        transforms=[
                            dict(type='Blur', blur_limit=3, p=1.0),
                            dict(type='MedianBlur', blur_limit=3, p=1.0),
                            dict(
                                type='MotionBlur',
                                blur_limit=6,
                                always_apply=False,
                                p=1.0)
                        ],
                        p=0.1)
                ],
                bbox_params=dict(
                    type='BboxParams',
                    format='pascal_voc',
                    label_fields=['gt_labels'],
                    min_visibility=0.0,
                    filter_lost_elements=True),
                keymap=dict(img='image', gt_bboxes='bboxes'),
                update_pad_shape=False,
                skip_img_without_anno=True),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
        ]),
    val=dict(
        type='CustomDataset',
        classes=('stas', ),
        ann_file='data/OBJ_Train_Datasets/custom/STAS_val.pkl',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=[(858, 471), (943, 518), (1000, 565), (1115, 612),
                           (1200, 660)],
                flip=True,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CustomDataset',
        classes=('stas', ),
        ann_file='data/OBJ_Train_Datasets/custom/STAS_test.pkl',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=[(858, 471), (943, 518), (1000, 565), (1115, 612),
                           (1200, 660)],
                flip=True,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
evaluation = dict(metric=['mAP'])
work_dir = 'work_dirs/new_epoch7_fine'
gpu_ids = range(0, 1)

2022-05-31 12:59:11,310 - mmdet - INFO - Set random seed to 1206, deterministic: True
2022-05-31 12:59:15,994 - mmdet - INFO - initialize CBFPN with init_cfg {'type': 'Xavier', 'layer': 'Conv2d', 'distribution': 'uniform'}
2022-05-31 12:59:16,022 - mmdet - INFO - initialize RPNHead with init_cfg {'type': 'Normal', 'layer': 'Conv2d', 'std': 0.01}
2022-05-31 12:59:16,029 - mmdet - INFO - initialize ConvFCBBoxHead with init_cfg [{'type': 'Normal', 'std': 0.01, 'override': {'name': 'fc_cls'}}, {'type': 'Normal', 'std': 0.001, 'override': {'name': 'fc_reg'}}, {'type': 'Xavier', 'layer': 'Linear', 'override': [{'name': 'shared_fcs'}, {'name': 'cls_fcs'}, {'name': 'reg_fcs'}]}]
2022-05-31 12:59:16,242 - mmdet - INFO - initialize ConvFCBBoxHead with init_cfg [{'type': 'Normal', 'std': 0.01, 'override': {'name': 'fc_cls'}}, {'type': 'Normal', 'std': 0.001, 'override': {'name': 'fc_reg'}}, {'type': 'Xavier', 'layer': 'Linear', 'override': [{'name': 'shared_fcs'}, {'name': 'cls_fcs'}, {'name': 'reg_fcs'}]}]
2022-05-31 12:59:16,438 - mmdet - INFO - initialize ConvFCBBoxHead with init_cfg [{'type': 'Normal', 'std': 0.01, 'override': {'name': 'fc_cls'}}, {'type': 'Normal', 'std': 0.001, 'override': {'name': 'fc_reg'}}, {'type': 'Xavier', 'layer': 'Linear', 'override': [{'name': 'shared_fcs'}, {'name': 'cls_fcs'}, {'name': 'reg_fcs'}]}]
Name of parameter - Initialization information

backbone.cb_modules.0.patch_embed.proj.weight - torch.Size([128, 3, 4, 4]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.patch_embed.proj.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.patch_embed.norm.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.patch_embed.norm.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.0.blocks.0.norm1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.0.blocks.0.norm1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.0.blocks.0.attn.relative_position_bias_table - torch.Size([169, 4]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.0.blocks.0.attn.qkv.weight - torch.Size([384, 128]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.0.blocks.0.attn.qkv.bias - torch.Size([384]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.0.blocks.0.attn.proj.weight - torch.Size([128, 128]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.0.blocks.0.attn.proj.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.0.blocks.0.norm2.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.0.blocks.0.norm2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.0.blocks.0.mlp.fc1.weight - torch.Size([512, 128]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.0.blocks.0.mlp.fc1.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.0.blocks.0.mlp.fc2.weight - torch.Size([128, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.0.blocks.0.mlp.fc2.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.0.blocks.1.norm1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.0.blocks.1.norm1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.0.blocks.1.attn.relative_position_bias_table - torch.Size([169, 4]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.0.blocks.1.attn.qkv.weight - torch.Size([384, 128]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.0.blocks.1.attn.qkv.bias - torch.Size([384]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.0.blocks.1.attn.proj.weight - torch.Size([128, 128]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.0.blocks.1.attn.proj.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.0.blocks.1.norm2.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.0.blocks.1.norm2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.0.blocks.1.mlp.fc1.weight - torch.Size([512, 128]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.0.blocks.1.mlp.fc1.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.0.blocks.1.mlp.fc2.weight - torch.Size([128, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.0.blocks.1.mlp.fc2.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.0.downsample.reduction.weight - torch.Size([256, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.0.downsample.norm.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.0.downsample.norm.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.1.blocks.0.norm1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.1.blocks.0.norm1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.1.blocks.0.attn.relative_position_bias_table - torch.Size([169, 8]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.1.blocks.0.attn.qkv.weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.1.blocks.0.attn.qkv.bias - torch.Size([768]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.1.blocks.0.attn.proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.1.blocks.0.attn.proj.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.1.blocks.0.norm2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.1.blocks.0.norm2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.1.blocks.0.mlp.fc1.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.1.blocks.0.mlp.fc1.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.1.blocks.0.mlp.fc2.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.1.blocks.0.mlp.fc2.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.1.blocks.1.norm1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.1.blocks.1.norm1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.1.blocks.1.attn.relative_position_bias_table - torch.Size([169, 8]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.1.blocks.1.attn.qkv.weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.1.blocks.1.attn.qkv.bias - torch.Size([768]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.1.blocks.1.attn.proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.1.blocks.1.attn.proj.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.1.blocks.1.norm2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.1.blocks.1.norm2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.1.blocks.1.mlp.fc1.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.1.blocks.1.mlp.fc1.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.1.blocks.1.mlp.fc2.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.1.blocks.1.mlp.fc2.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.1.downsample.reduction.weight - torch.Size([512, 1024]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.1.downsample.norm.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.1.downsample.norm.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.0.norm1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.0.norm1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.0.attn.relative_position_bias_table - torch.Size([169, 16]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.0.attn.qkv.weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.0.attn.qkv.bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.0.attn.proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.0.attn.proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.0.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.0.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.0.mlp.fc1.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.0.mlp.fc1.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.0.mlp.fc2.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.0.mlp.fc2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.1.norm1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.1.norm1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.1.attn.relative_position_bias_table - torch.Size([169, 16]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.1.attn.qkv.weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.1.attn.qkv.bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.1.attn.proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.1.attn.proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.1.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.1.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.1.mlp.fc1.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.1.mlp.fc1.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.1.mlp.fc2.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.1.mlp.fc2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.2.norm1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.2.norm1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.2.attn.relative_position_bias_table - torch.Size([169, 16]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.2.attn.qkv.weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.2.attn.qkv.bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.2.attn.proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.2.attn.proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.2.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.2.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.2.mlp.fc1.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.2.mlp.fc1.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.2.mlp.fc2.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.2.mlp.fc2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.3.norm1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.3.norm1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.3.attn.relative_position_bias_table - torch.Size([169, 16]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.3.attn.qkv.weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.3.attn.qkv.bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.3.attn.proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.3.attn.proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.3.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.3.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.3.mlp.fc1.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.3.mlp.fc1.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.3.mlp.fc2.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.3.mlp.fc2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.4.norm1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.4.norm1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.4.attn.relative_position_bias_table - torch.Size([169, 16]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.4.attn.qkv.weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.4.attn.qkv.bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.4.attn.proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.4.attn.proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.4.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.4.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.4.mlp.fc1.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.4.mlp.fc1.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.4.mlp.fc2.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.4.mlp.fc2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.5.norm1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.5.norm1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.5.attn.relative_position_bias_table - torch.Size([169, 16]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.5.attn.qkv.weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.5.attn.qkv.bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.5.attn.proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.5.attn.proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.5.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.5.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.5.mlp.fc1.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.5.mlp.fc1.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.5.mlp.fc2.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.5.mlp.fc2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.6.norm1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.6.norm1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.6.attn.relative_position_bias_table - torch.Size([169, 16]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.6.attn.qkv.weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.6.attn.qkv.bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.6.attn.proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.6.attn.proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.6.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.6.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.6.mlp.fc1.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.6.mlp.fc1.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.6.mlp.fc2.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.6.mlp.fc2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.7.norm1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.7.norm1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.7.attn.relative_position_bias_table - torch.Size([169, 16]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.7.attn.qkv.weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.7.attn.qkv.bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.7.attn.proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.7.attn.proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.7.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.7.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.7.mlp.fc1.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.7.mlp.fc1.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.7.mlp.fc2.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.7.mlp.fc2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.8.norm1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.8.norm1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.8.attn.relative_position_bias_table - torch.Size([169, 16]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.8.attn.qkv.weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.8.attn.qkv.bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.8.attn.proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.8.attn.proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.8.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.8.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.8.mlp.fc1.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.8.mlp.fc1.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.8.mlp.fc2.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.8.mlp.fc2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.9.norm1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.9.norm1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.9.attn.relative_position_bias_table - torch.Size([169, 16]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.9.attn.qkv.weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.9.attn.qkv.bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.9.attn.proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.9.attn.proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.9.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.9.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.9.mlp.fc1.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.9.mlp.fc1.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.9.mlp.fc2.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.9.mlp.fc2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.10.norm1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.10.norm1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.10.attn.relative_position_bias_table - torch.Size([169, 16]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.10.attn.qkv.weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.10.attn.qkv.bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.10.attn.proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.10.attn.proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.10.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.10.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.10.mlp.fc1.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.10.mlp.fc1.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.10.mlp.fc2.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.10.mlp.fc2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.11.norm1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.11.norm1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.11.attn.relative_position_bias_table - torch.Size([169, 16]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.11.attn.qkv.weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.11.attn.qkv.bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.11.attn.proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.11.attn.proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.11.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.11.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.11.mlp.fc1.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.11.mlp.fc1.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.11.mlp.fc2.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.11.mlp.fc2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.12.norm1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.12.norm1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.12.attn.relative_position_bias_table - torch.Size([169, 16]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.12.attn.qkv.weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.12.attn.qkv.bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.12.attn.proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.12.attn.proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.12.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.12.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.12.mlp.fc1.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.12.mlp.fc1.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.12.mlp.fc2.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.12.mlp.fc2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.13.norm1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.13.norm1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.13.attn.relative_position_bias_table - torch.Size([169, 16]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.13.attn.qkv.weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.13.attn.qkv.bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.13.attn.proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.13.attn.proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.13.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.13.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.13.mlp.fc1.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.13.mlp.fc1.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.13.mlp.fc2.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.13.mlp.fc2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.14.norm1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.14.norm1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.14.attn.relative_position_bias_table - torch.Size([169, 16]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.14.attn.qkv.weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.14.attn.qkv.bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.14.attn.proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.14.attn.proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.14.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.14.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.14.mlp.fc1.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.14.mlp.fc1.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.14.mlp.fc2.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.14.mlp.fc2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.15.norm1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.15.norm1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.15.attn.relative_position_bias_table - torch.Size([169, 16]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.15.attn.qkv.weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.15.attn.qkv.bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.15.attn.proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.15.attn.proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.15.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.15.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.15.mlp.fc1.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.15.mlp.fc1.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.15.mlp.fc2.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.15.mlp.fc2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.16.norm1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.16.norm1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.16.attn.relative_position_bias_table - torch.Size([169, 16]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.16.attn.qkv.weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.16.attn.qkv.bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.16.attn.proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.16.attn.proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.16.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.16.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.16.mlp.fc1.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.16.mlp.fc1.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.16.mlp.fc2.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.16.mlp.fc2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.17.norm1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.17.norm1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.17.attn.relative_position_bias_table - torch.Size([169, 16]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.17.attn.qkv.weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.17.attn.qkv.bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.17.attn.proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.17.attn.proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.17.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.17.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.blocks.17.mlp.fc1.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.17.mlp.fc1.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.17.mlp.fc2.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.blocks.17.mlp.fc2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.downsample.reduction.weight - torch.Size([1024, 2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.2.downsample.norm.weight - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.2.downsample.norm.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.3.blocks.0.norm1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.3.blocks.0.norm1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.3.blocks.0.attn.relative_position_bias_table - torch.Size([169, 32]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.3.blocks.0.attn.qkv.weight - torch.Size([3072, 1024]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.3.blocks.0.attn.qkv.bias - torch.Size([3072]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.3.blocks.0.attn.proj.weight - torch.Size([1024, 1024]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.3.blocks.0.attn.proj.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.3.blocks.0.norm2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.3.blocks.0.norm2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.3.blocks.0.mlp.fc1.weight - torch.Size([4096, 1024]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.3.blocks.0.mlp.fc1.bias - torch.Size([4096]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.3.blocks.0.mlp.fc2.weight - torch.Size([1024, 4096]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.3.blocks.0.mlp.fc2.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.3.blocks.1.norm1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.3.blocks.1.norm1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.3.blocks.1.attn.relative_position_bias_table - torch.Size([169, 32]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.3.blocks.1.attn.qkv.weight - torch.Size([3072, 1024]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.3.blocks.1.attn.qkv.bias - torch.Size([3072]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.3.blocks.1.attn.proj.weight - torch.Size([1024, 1024]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.3.blocks.1.attn.proj.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.3.blocks.1.norm2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.3.blocks.1.norm2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.layers.3.blocks.1.mlp.fc1.weight - torch.Size([4096, 1024]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.3.blocks.1.mlp.fc1.bias - torch.Size([4096]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.3.blocks.1.mlp.fc2.weight - torch.Size([1024, 4096]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.layers.3.blocks.1.mlp.fc2.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.0.norm0.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.norm0.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.norm1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.norm1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.norm3.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.0.norm3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.0.blocks.0.norm1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.0.blocks.0.norm1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.0.blocks.0.attn.relative_position_bias_table - torch.Size([169, 4]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.0.blocks.0.attn.qkv.weight - torch.Size([384, 128]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.0.blocks.0.attn.qkv.bias - torch.Size([384]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.0.blocks.0.attn.proj.weight - torch.Size([128, 128]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.0.blocks.0.attn.proj.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.0.blocks.0.norm2.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.0.blocks.0.norm2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.0.blocks.0.mlp.fc1.weight - torch.Size([512, 128]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.0.blocks.0.mlp.fc1.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.0.blocks.0.mlp.fc2.weight - torch.Size([128, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.0.blocks.0.mlp.fc2.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.0.blocks.1.norm1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.0.blocks.1.norm1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.0.blocks.1.attn.relative_position_bias_table - torch.Size([169, 4]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.0.blocks.1.attn.qkv.weight - torch.Size([384, 128]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.0.blocks.1.attn.qkv.bias - torch.Size([384]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.0.blocks.1.attn.proj.weight - torch.Size([128, 128]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.0.blocks.1.attn.proj.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.0.blocks.1.norm2.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.0.blocks.1.norm2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.0.blocks.1.mlp.fc1.weight - torch.Size([512, 128]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.0.blocks.1.mlp.fc1.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.0.blocks.1.mlp.fc2.weight - torch.Size([128, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.0.blocks.1.mlp.fc2.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.0.downsample.reduction.weight - torch.Size([256, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.0.downsample.norm.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.0.downsample.norm.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.1.blocks.0.norm1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.1.blocks.0.norm1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.1.blocks.0.attn.relative_position_bias_table - torch.Size([169, 8]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.1.blocks.0.attn.qkv.weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.1.blocks.0.attn.qkv.bias - torch.Size([768]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.1.blocks.0.attn.proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.1.blocks.0.attn.proj.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.1.blocks.0.norm2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.1.blocks.0.norm2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.1.blocks.0.mlp.fc1.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.1.blocks.0.mlp.fc1.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.1.blocks.0.mlp.fc2.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.1.blocks.0.mlp.fc2.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.1.blocks.1.norm1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.1.blocks.1.norm1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.1.blocks.1.attn.relative_position_bias_table - torch.Size([169, 8]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.1.blocks.1.attn.qkv.weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.1.blocks.1.attn.qkv.bias - torch.Size([768]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.1.blocks.1.attn.proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.1.blocks.1.attn.proj.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.1.blocks.1.norm2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.1.blocks.1.norm2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.1.blocks.1.mlp.fc1.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.1.blocks.1.mlp.fc1.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.1.blocks.1.mlp.fc2.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.1.blocks.1.mlp.fc2.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.1.downsample.reduction.weight - torch.Size([512, 1024]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.1.downsample.norm.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.1.downsample.norm.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.0.norm1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.0.norm1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.0.attn.relative_position_bias_table - torch.Size([169, 16]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.0.attn.qkv.weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.0.attn.qkv.bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.0.attn.proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.0.attn.proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.0.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.0.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.0.mlp.fc1.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.0.mlp.fc1.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.0.mlp.fc2.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.0.mlp.fc2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.1.norm1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.1.norm1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.1.attn.relative_position_bias_table - torch.Size([169, 16]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.1.attn.qkv.weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.1.attn.qkv.bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.1.attn.proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.1.attn.proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.1.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.1.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.1.mlp.fc1.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.1.mlp.fc1.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.1.mlp.fc2.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.1.mlp.fc2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.2.norm1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.2.norm1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.2.attn.relative_position_bias_table - torch.Size([169, 16]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.2.attn.qkv.weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.2.attn.qkv.bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.2.attn.proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.2.attn.proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.2.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.2.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.2.mlp.fc1.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.2.mlp.fc1.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.2.mlp.fc2.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.2.mlp.fc2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.3.norm1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.3.norm1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.3.attn.relative_position_bias_table - torch.Size([169, 16]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.3.attn.qkv.weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.3.attn.qkv.bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.3.attn.proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.3.attn.proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.3.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.3.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.3.mlp.fc1.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.3.mlp.fc1.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.3.mlp.fc2.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.3.mlp.fc2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.4.norm1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.4.norm1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.4.attn.relative_position_bias_table - torch.Size([169, 16]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.4.attn.qkv.weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.4.attn.qkv.bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.4.attn.proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.4.attn.proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.4.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.4.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.4.mlp.fc1.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.4.mlp.fc1.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.4.mlp.fc2.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.4.mlp.fc2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.5.norm1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.5.norm1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.5.attn.relative_position_bias_table - torch.Size([169, 16]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.5.attn.qkv.weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.5.attn.qkv.bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.5.attn.proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.5.attn.proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.5.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.5.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.5.mlp.fc1.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.5.mlp.fc1.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.5.mlp.fc2.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.5.mlp.fc2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.6.norm1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.6.norm1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.6.attn.relative_position_bias_table - torch.Size([169, 16]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.6.attn.qkv.weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.6.attn.qkv.bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.6.attn.proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.6.attn.proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.6.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.6.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.6.mlp.fc1.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.6.mlp.fc1.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.6.mlp.fc2.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.6.mlp.fc2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.7.norm1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.7.norm1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.7.attn.relative_position_bias_table - torch.Size([169, 16]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.7.attn.qkv.weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.7.attn.qkv.bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.7.attn.proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.7.attn.proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.7.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.7.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.7.mlp.fc1.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.7.mlp.fc1.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.7.mlp.fc2.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.7.mlp.fc2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.8.norm1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.8.norm1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.8.attn.relative_position_bias_table - torch.Size([169, 16]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.8.attn.qkv.weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.8.attn.qkv.bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.8.attn.proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.8.attn.proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.8.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.8.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.8.mlp.fc1.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.8.mlp.fc1.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.8.mlp.fc2.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.8.mlp.fc2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.9.norm1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.9.norm1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.9.attn.relative_position_bias_table - torch.Size([169, 16]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.9.attn.qkv.weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.9.attn.qkv.bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.9.attn.proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.9.attn.proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.9.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.9.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.9.mlp.fc1.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.9.mlp.fc1.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.9.mlp.fc2.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.9.mlp.fc2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.10.norm1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.10.norm1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.10.attn.relative_position_bias_table - torch.Size([169, 16]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.10.attn.qkv.weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.10.attn.qkv.bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.10.attn.proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.10.attn.proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.10.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.10.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.10.mlp.fc1.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.10.mlp.fc1.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.10.mlp.fc2.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.10.mlp.fc2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.11.norm1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.11.norm1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.11.attn.relative_position_bias_table - torch.Size([169, 16]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.11.attn.qkv.weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.11.attn.qkv.bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.11.attn.proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.11.attn.proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.11.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.11.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.11.mlp.fc1.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.11.mlp.fc1.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.11.mlp.fc2.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.11.mlp.fc2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.12.norm1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.12.norm1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.12.attn.relative_position_bias_table - torch.Size([169, 16]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.12.attn.qkv.weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.12.attn.qkv.bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.12.attn.proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.12.attn.proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.12.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.12.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.12.mlp.fc1.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.12.mlp.fc1.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.12.mlp.fc2.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.12.mlp.fc2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.13.norm1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.13.norm1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.13.attn.relative_position_bias_table - torch.Size([169, 16]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.13.attn.qkv.weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.13.attn.qkv.bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.13.attn.proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.13.attn.proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.13.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.13.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.13.mlp.fc1.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.13.mlp.fc1.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.13.mlp.fc2.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.13.mlp.fc2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.14.norm1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.14.norm1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.14.attn.relative_position_bias_table - torch.Size([169, 16]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.14.attn.qkv.weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.14.attn.qkv.bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.14.attn.proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.14.attn.proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.14.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.14.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.14.mlp.fc1.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.14.mlp.fc1.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.14.mlp.fc2.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.14.mlp.fc2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.15.norm1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.15.norm1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.15.attn.relative_position_bias_table - torch.Size([169, 16]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.15.attn.qkv.weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.15.attn.qkv.bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.15.attn.proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.15.attn.proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.15.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.15.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.15.mlp.fc1.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.15.mlp.fc1.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.15.mlp.fc2.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.15.mlp.fc2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.16.norm1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.16.norm1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.16.attn.relative_position_bias_table - torch.Size([169, 16]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.16.attn.qkv.weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.16.attn.qkv.bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.16.attn.proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.16.attn.proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.16.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.16.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.16.mlp.fc1.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.16.mlp.fc1.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.16.mlp.fc2.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.16.mlp.fc2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.17.norm1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.17.norm1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.17.attn.relative_position_bias_table - torch.Size([169, 16]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.17.attn.qkv.weight - torch.Size([1536, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.17.attn.qkv.bias - torch.Size([1536]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.17.attn.proj.weight - torch.Size([512, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.17.attn.proj.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.17.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.17.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.blocks.17.mlp.fc1.weight - torch.Size([2048, 512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.17.mlp.fc1.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.17.mlp.fc2.weight - torch.Size([512, 2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.blocks.17.mlp.fc2.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.downsample.reduction.weight - torch.Size([1024, 2048]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.2.downsample.norm.weight - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.2.downsample.norm.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.3.blocks.0.norm1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.3.blocks.0.norm1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.3.blocks.0.attn.relative_position_bias_table - torch.Size([169, 32]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.3.blocks.0.attn.qkv.weight - torch.Size([3072, 1024]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.3.blocks.0.attn.qkv.bias - torch.Size([3072]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.3.blocks.0.attn.proj.weight - torch.Size([1024, 1024]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.3.blocks.0.attn.proj.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.3.blocks.0.norm2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.3.blocks.0.norm2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.3.blocks.0.mlp.fc1.weight - torch.Size([4096, 1024]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.3.blocks.0.mlp.fc1.bias - torch.Size([4096]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.3.blocks.0.mlp.fc2.weight - torch.Size([1024, 4096]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.3.blocks.0.mlp.fc2.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.3.blocks.1.norm1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.3.blocks.1.norm1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.3.blocks.1.attn.relative_position_bias_table - torch.Size([169, 32]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.3.blocks.1.attn.qkv.weight - torch.Size([3072, 1024]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.3.blocks.1.attn.qkv.bias - torch.Size([3072]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.3.blocks.1.attn.proj.weight - torch.Size([1024, 1024]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.3.blocks.1.attn.proj.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.3.blocks.1.norm2.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.3.blocks.1.norm2.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.layers.3.blocks.1.mlp.fc1.weight - torch.Size([4096, 1024]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.3.blocks.1.mlp.fc1.bias - torch.Size([4096]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.3.blocks.1.mlp.fc2.weight - torch.Size([1024, 4096]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.layers.3.blocks.1.mlp.fc2.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_modules.1.norm0.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.norm0.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.norm1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.norm1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.norm2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.norm2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.norm3.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_modules.1.norm3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

backbone.cb_linears.0.1.weight - torch.Size([128, 256, 1, 1]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_linears.0.1.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_linears.0.2.weight - torch.Size([128, 512, 1, 1]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_linears.0.2.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_linears.0.3.weight - torch.Size([128, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_linears.0.3.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_linears.1.1.weight - torch.Size([256, 512, 1, 1]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_linears.1.1.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_linears.1.2.weight - torch.Size([256, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_linears.1.2.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_linears.2.1.weight - torch.Size([512, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

backbone.cb_linears.2.1.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in CBSwinTransformer  

neck.lateral_convs.0.conv.weight - torch.Size([256, 128, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

neck.lateral_convs.1.conv.weight - torch.Size([256, 256, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

neck.lateral_convs.2.conv.weight - torch.Size([256, 512, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

neck.lateral_convs.3.conv.weight - torch.Size([256, 1024, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.3.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

neck.fpn_convs.0.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

neck.fpn_convs.1.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

neck.fpn_convs.2.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

neck.fpn_convs.3.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.3.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

rpn_head.rpn_conv.weight - torch.Size([256, 256, 3, 3]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_conv.bias - torch.Size([256]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_cls.weight - torch.Size([5, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_cls.bias - torch.Size([5]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_reg.weight - torch.Size([20, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_reg.bias - torch.Size([20]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.0.fc_cls.weight - torch.Size([2, 1024]): 
XavierInit: gain=1, distribution=normal, bias=0 

roi_head.bbox_head.0.fc_cls.bias - torch.Size([2]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.0.fc_reg.weight - torch.Size([4, 1024]): 
XavierInit: gain=1, distribution=normal, bias=0 

roi_head.bbox_head.0.fc_reg.bias - torch.Size([4]): 
NormalInit: mean=0, std=0.001, bias=0 

roi_head.bbox_head.0.shared_convs.0.conv.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

roi_head.bbox_head.0.shared_convs.0.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

roi_head.bbox_head.0.shared_convs.0.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

roi_head.bbox_head.0.shared_convs.1.conv.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

roi_head.bbox_head.0.shared_convs.1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

roi_head.bbox_head.0.shared_convs.1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

roi_head.bbox_head.0.shared_convs.2.conv.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

roi_head.bbox_head.0.shared_convs.2.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

roi_head.bbox_head.0.shared_convs.2.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

roi_head.bbox_head.0.shared_convs.3.conv.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

roi_head.bbox_head.0.shared_convs.3.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

roi_head.bbox_head.0.shared_convs.3.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

roi_head.bbox_head.0.shared_fcs.0.weight - torch.Size([1024, 12544]): 
XavierInit: gain=1, distribution=normal, bias=0 

roi_head.bbox_head.0.shared_fcs.0.bias - torch.Size([1024]): 
XavierInit: gain=1, distribution=normal, bias=0 

roi_head.bbox_head.1.fc_cls.weight - torch.Size([2, 1024]): 
XavierInit: gain=1, distribution=normal, bias=0 

roi_head.bbox_head.1.fc_cls.bias - torch.Size([2]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.1.fc_reg.weight - torch.Size([4, 1024]): 
XavierInit: gain=1, distribution=normal, bias=0 

roi_head.bbox_head.1.fc_reg.bias - torch.Size([4]): 
NormalInit: mean=0, std=0.001, bias=0 

roi_head.bbox_head.1.shared_convs.0.conv.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

roi_head.bbox_head.1.shared_convs.0.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

roi_head.bbox_head.1.shared_convs.0.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

roi_head.bbox_head.1.shared_convs.1.conv.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

roi_head.bbox_head.1.shared_convs.1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

roi_head.bbox_head.1.shared_convs.1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

roi_head.bbox_head.1.shared_convs.2.conv.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

roi_head.bbox_head.1.shared_convs.2.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

roi_head.bbox_head.1.shared_convs.2.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

roi_head.bbox_head.1.shared_convs.3.conv.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

roi_head.bbox_head.1.shared_convs.3.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

roi_head.bbox_head.1.shared_convs.3.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

roi_head.bbox_head.1.shared_fcs.0.weight - torch.Size([1024, 12544]): 
XavierInit: gain=1, distribution=normal, bias=0 

roi_head.bbox_head.1.shared_fcs.0.bias - torch.Size([1024]): 
XavierInit: gain=1, distribution=normal, bias=0 

roi_head.bbox_head.2.fc_cls.weight - torch.Size([2, 1024]): 
XavierInit: gain=1, distribution=normal, bias=0 

roi_head.bbox_head.2.fc_cls.bias - torch.Size([2]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.2.fc_reg.weight - torch.Size([4, 1024]): 
XavierInit: gain=1, distribution=normal, bias=0 

roi_head.bbox_head.2.fc_reg.bias - torch.Size([4]): 
NormalInit: mean=0, std=0.001, bias=0 

roi_head.bbox_head.2.shared_convs.0.conv.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

roi_head.bbox_head.2.shared_convs.0.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

roi_head.bbox_head.2.shared_convs.0.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

roi_head.bbox_head.2.shared_convs.1.conv.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

roi_head.bbox_head.2.shared_convs.1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

roi_head.bbox_head.2.shared_convs.1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

roi_head.bbox_head.2.shared_convs.2.conv.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

roi_head.bbox_head.2.shared_convs.2.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

roi_head.bbox_head.2.shared_convs.2.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

roi_head.bbox_head.2.shared_convs.3.conv.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

roi_head.bbox_head.2.shared_convs.3.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

roi_head.bbox_head.2.shared_convs.3.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of HybridTaskCascade  

roi_head.bbox_head.2.shared_fcs.0.weight - torch.Size([1024, 12544]): 
XavierInit: gain=1, distribution=normal, bias=0 

roi_head.bbox_head.2.shared_fcs.0.bias - torch.Size([1024]): 
XavierInit: gain=1, distribution=normal, bias=0 
2022-05-31 12:59:22,423 - mmdet - INFO - load checkpoint from local path: ckpt/htc_cbv2_swin_base22k_patch4_window7_mstrain_400-1400_giou_4conv1f_adamw_20e_coco.pth
2022-05-31 12:59:23,508 - mmdet - WARNING - The model and loaded state dict do not match exactly

size mismatch for rpn_head.rpn_cls.weight: copying a param with shape torch.Size([3, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([5, 256, 1, 1]).
size mismatch for rpn_head.rpn_cls.bias: copying a param with shape torch.Size([3]) from checkpoint, the shape in current model is torch.Size([5]).
size mismatch for rpn_head.rpn_reg.weight: copying a param with shape torch.Size([12, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([20, 256, 1, 1]).
size mismatch for rpn_head.rpn_reg.bias: copying a param with shape torch.Size([12]) from checkpoint, the shape in current model is torch.Size([20]).
size mismatch for roi_head.bbox_head.0.fc_cls.weight: copying a param with shape torch.Size([81, 1024]) from checkpoint, the shape in current model is torch.Size([2, 1024]).
size mismatch for roi_head.bbox_head.0.fc_cls.bias: copying a param with shape torch.Size([81]) from checkpoint, the shape in current model is torch.Size([2]).
size mismatch for roi_head.bbox_head.1.fc_cls.weight: copying a param with shape torch.Size([81, 1024]) from checkpoint, the shape in current model is torch.Size([2, 1024]).
size mismatch for roi_head.bbox_head.1.fc_cls.bias: copying a param with shape torch.Size([81]) from checkpoint, the shape in current model is torch.Size([2]).
size mismatch for roi_head.bbox_head.2.fc_cls.weight: copying a param with shape torch.Size([81, 1024]) from checkpoint, the shape in current model is torch.Size([2, 1024]).
size mismatch for roi_head.bbox_head.2.fc_cls.bias: copying a param with shape torch.Size([81]) from checkpoint, the shape in current model is torch.Size([2]).
unexpected key in source state_dict: roi_head.mask_head.0.convs.0.conv.weight, roi_head.mask_head.0.convs.0.conv.bias, roi_head.mask_head.0.convs.1.conv.weight, roi_head.mask_head.0.convs.1.conv.bias, roi_head.mask_head.0.convs.2.conv.weight, roi_head.mask_head.0.convs.2.conv.bias, roi_head.mask_head.0.convs.3.conv.weight, roi_head.mask_head.0.convs.3.conv.bias, roi_head.mask_head.0.upsample.weight, roi_head.mask_head.0.upsample.bias, roi_head.mask_head.0.conv_logits.weight, roi_head.mask_head.0.conv_logits.bias, roi_head.mask_head.1.convs.0.conv.weight, roi_head.mask_head.1.convs.0.conv.bias, roi_head.mask_head.1.convs.1.conv.weight, roi_head.mask_head.1.convs.1.conv.bias, roi_head.mask_head.1.convs.2.conv.weight, roi_head.mask_head.1.convs.2.conv.bias, roi_head.mask_head.1.convs.3.conv.weight, roi_head.mask_head.1.convs.3.conv.bias, roi_head.mask_head.1.upsample.weight, roi_head.mask_head.1.upsample.bias, roi_head.mask_head.1.conv_logits.weight, roi_head.mask_head.1.conv_logits.bias, roi_head.mask_head.1.conv_res.conv.weight, roi_head.mask_head.1.conv_res.conv.bias, roi_head.mask_head.2.convs.0.conv.weight, roi_head.mask_head.2.convs.0.conv.bias, roi_head.mask_head.2.convs.1.conv.weight, roi_head.mask_head.2.convs.1.conv.bias, roi_head.mask_head.2.convs.2.conv.weight, roi_head.mask_head.2.convs.2.conv.bias, roi_head.mask_head.2.convs.3.conv.weight, roi_head.mask_head.2.convs.3.conv.bias, roi_head.mask_head.2.upsample.weight, roi_head.mask_head.2.upsample.bias, roi_head.mask_head.2.conv_logits.weight, roi_head.mask_head.2.conv_logits.bias, roi_head.mask_head.2.conv_res.conv.weight, roi_head.mask_head.2.conv_res.conv.bias, roi_head.semantic_head.lateral_convs.0.conv.weight, roi_head.semantic_head.lateral_convs.0.conv.bias, roi_head.semantic_head.lateral_convs.1.conv.weight, roi_head.semantic_head.lateral_convs.1.conv.bias, roi_head.semantic_head.lateral_convs.2.conv.weight, roi_head.semantic_head.lateral_convs.2.conv.bias, roi_head.semantic_head.lateral_convs.3.conv.weight, roi_head.semantic_head.lateral_convs.3.conv.bias, roi_head.semantic_head.lateral_convs.4.conv.weight, roi_head.semantic_head.lateral_convs.4.conv.bias, roi_head.semantic_head.convs.0.conv.weight, roi_head.semantic_head.convs.0.conv.bias, roi_head.semantic_head.convs.1.conv.weight, roi_head.semantic_head.convs.1.conv.bias, roi_head.semantic_head.convs.2.conv.weight, roi_head.semantic_head.convs.2.conv.bias, roi_head.semantic_head.convs.3.conv.weight, roi_head.semantic_head.convs.3.conv.bias, roi_head.semantic_head.conv_embedding.conv.weight, roi_head.semantic_head.conv_embedding.conv.bias, roi_head.semantic_head.conv_logits.weight, roi_head.semantic_head.conv_logits.bias

2022-05-31 12:59:23,552 - mmdet - INFO - Start running, host: r10944040@rose, work_dir: /shared_home/r10944040/ai-cup/CBNetV2/work_dirs/new_epoch7_fine
2022-05-31 12:59:23,553 - mmdet - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) StepLrUpdaterHook                  
(ABOVE_NORMAL) DistOptimizerHook                  
(NORMAL      ) CheckpointHook                     
(NORMAL      ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) EvalHook                           
(NORMAL      ) NumClassCheckHook                  
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_iter:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) EvalHook                           
(LOW         ) IterTimerHook                      
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) DistOptimizerHook                  
(NORMAL      ) CheckpointHook                     
(NORMAL      ) EvalHook                           
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(NORMAL      ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_epoch:
(NORMAL      ) NumClassCheckHook                  
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
2022-05-31 12:59:23,553 - mmdet - INFO - workflow: [('train', 1), ('val', 1)], max: 7 epochs
2022-05-31 12:59:23,554 - mmdet - INFO - Checkpoints will be saved to /shared_home/r10944040/ai-cup/CBNetV2/work_dirs/new_epoch7_fine by HardDiskBackend.
